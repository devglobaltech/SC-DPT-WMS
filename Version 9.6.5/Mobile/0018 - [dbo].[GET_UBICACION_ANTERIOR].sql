IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GET_UBICACION_ANTERIOR]') AND type in (N'P'))
DROP PROCEDURE [dbo].[GET_UBICACION_ANTERIOR]
GO

CREATE     PROCEDURE [dbo].[GET_UBICACION_ANTERIOR]
@POSICION_O		AS VARCHAR(45),
@CONTENEDORA	AS VARCHAR(100),
@TIPO			AS INT,
@POSICION_D		AS VARCHAR(45) OUTPUT
AS
BEGIN
	DECLARE @EXISTE 		AS INT
	DECLARE @POS_ANT		AS NUMERIC(20,0)
	DECLARE @NAV_ANT		AS NUMERIC(20,0)
	DECLARE @PALLET_CON		AS VARCHAR(100)
	DECLARE @CLIENTE_ID		AS VARCHAR(15)
	DECLARE @CRTL_PESO_VOL	AS VARCHAR(1)
	DECLARE @NUEVO_MATERIAL	AS NUMERIC(10,0)
	DECLARE @INGRESA		AS INT

	SELECT 	DISTINCT @POS_ANT=RL.POSICION_ANTERIOR, @NAV_ANT=RL.NAVE_ANTERIOR, @CLIENTE_ID=RL.CLIENTE_ID
	FROM	DET_DOCUMENTO DD 
			INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
			ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
			INNER JOIN RL_DET_DOC_TRANS_POSICION RL
			ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
	WHERE	((NRO_BULTO=LTRIM(RTRIM(UPPER(@CONTENEDORA)))) OR(PROP1=LTRIM(RTRIM(UPPER(@CONTENEDORA)))))
			AND RL.DOC_TRANS_ID_EGR IS NULL
			AND RL.DISPONIBLE='1'
			AND (RL.NAVE_ACTUAL=	(	SELECT 	NAVE_ID
									FROM 	NAVE
									WHERE	NAVE_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
								)
			OR RL.POSICION_ACTUAL=	(	SELECT 	TOP 1 POSICION_ID
										FROM 	POSICION
										WHERE	POSICION_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
									))
			AND RL.CANTIDAD >0
			AND RL.CAT_LOG_ID <> 'DIF_INV'

	SELECT	@CRTL_PESO_VOL=ISNULL(FLG_ING_VOL_PESO,'0')
	FROM	CLIENTE_PARAMETROS
	WHERE	CLIENTE_ID=@CLIENTE_ID
	-----------------------------------------------------------------------------------------
	-- lo malo es tener que averiguar si tiene o no material la posicion anterior.
	-----------------------------------------------------------------------------------------
	--1. si estaba en una nave... vuelve derecho al mismo lugar.
	if @NAV_ANT is not null BEGIN

		SELECT	@POSICION_D = NAVE_COD
		FROM	NAVE
		WHERE	NAVE_ID = @NAV_ANT
				AND PRE_EGRESO<>'1'
				AND PRE_INGRESO<>'1'

		RETURN
	END
	--2. Por las malas... esta en una posicion.
	IF @POS_ANT IS NOT NULL BEGIN

		SELECT	@NUEVO_MATERIAL=COUNT(DD.DOCUMENTO_ID)
		FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT	ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
				INNER JOIN RL_DET_DOC_TRANS_POSICION RL						ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
		WHERE	RL.POSICION_ACTUAL=@POS_ANT

		IF @NUEVO_MATERIAL=0 BEGIN
			--NO HAY MATERIAL NUEVO... ASI QUE PUEDO MANDARLO AL MISMO LUGAR.
			SELECT	@POSICION_D = POSICION_COD
			FROM	POSICION
			WHERE	POSICION_ID = @POS_ANT

			RETURN
		END ELSE BEGIN
			--D'OH, HAY QUE AVERIGUAR SI ENTRA DONDE ESTABA ANTES.
			IF @TIPO=1 BEGIN

				SELECT	DISTINCT @INGRESA=1
				FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT	ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
						INNER JOIN RL_DET_DOC_TRANS_POSICION RL						ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
				WHERE	((DD.PROP1=@CONTENEDORA)OR(DD.NRO_BULTO=@CONTENEDORA))
						AND ((@CRTL_PESO_VOL='0')OR([dbo].[TRANSFERENCIA_CONTENEDOR_PESO](DD.DOCUMENTO_ID,DD.NRO_BULTO,@POS_ANT)='1'))
						AND ((@CRTL_PESO_VOL='0')OR([dbo].[TRANSFERENCIA_CONTENEDOR_VOLUMEN](DD.DOCUMENTO_ID,DD.NRO_BULTO,@POS_ANT)='1'))

			END
			IF @TIPO=2 BEGIN

				SELECT	DISTINCT @INGRESA=1
				FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT	ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
						INNER JOIN RL_DET_DOC_TRANS_POSICION RL						ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
				WHERE	((DD.PROP1=@CONTENEDORA)OR(DD.NRO_BULTO=@CONTENEDORA))
						AND ((@CRTL_PESO_VOL='0')OR([dbo].[TRANSFERENCIA_PALLET_PESO](DD.DOCUMENTO_ID,DD.NRO_LINEA,DD.PROP1,@POS_ANT)='1'))
						AND ((@CRTL_PESO_VOL='0')OR([DBO].[TRANSFERENCIA_PALLET_VOLUMEN](DD.DOCUMENTO_ID,DD.NRO_LINEA,DD.PROP1,@POS_ANT)='1'))

			END
			IF @INGRESA=1 BEGIN

				SELECT	@POSICION_D = POSICION_COD
				FROM	POSICION
				WHERE	POSICION_ID = @POS_ANT

				RETURN
			END
		END
	END



	IF @CRTL_PESO_VOL=0 BEGIN
		-------------------------------------------------------------------------------------
		--	NO CONTROLA EL PESO Y EL VOLUMEN. SIGUE COMO ANTES EL ALGORITMO.
		-------------------------------------------------------------------------------------
		IF (@TIPO=1 AND @POS_ANT IS NULL AND @NAV_ANT IS NULL) BEGIN

			SELECT 	DISTINCT @PALLET_CON=DD.PROP1 
			FROM	DET_DOCUMENTO DD 
					INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
					ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
					INNER JOIN RL_DET_DOC_TRANS_POSICION RL
					ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
			WHERE	DD.NRO_BULTO=LTRIM(RTRIM(UPPER(@CONTENEDORA)))
					AND RL.DOC_TRANS_ID_EGR IS NULL
					AND RL.DISPONIBLE='1'
					AND (RL.NAVE_ACTUAL=	(	SELECT 	NAVE_ID
												FROM 	NAVE
												WHERE	NAVE_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
											)
					OR RL.POSICION_ACTUAL=	(	SELECT 	TOP 1 POSICION_ID
												FROM 	POSICION
												WHERE	POSICION_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
											))
					AND RL.CANTIDAD >0

			SELECT 	DISTINCT @POS_ANT=RL.POSICION_ANTERIOR, @NAV_ANT=RL.NAVE_ANTERIOR
			FROM	DET_DOCUMENTO DD 
					INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
					ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
					INNER JOIN RL_DET_DOC_TRANS_POSICION RL
					ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
			WHERE	PROP1=LTRIM(RTRIM(UPPER(@PALLET_CON)))
					AND RL.DOC_TRANS_ID_EGR IS NULL
					AND RL.DISPONIBLE='1'
					AND (RL.NAVE_ACTUAL=	(	SELECT 	NAVE_ID
												FROM 	NAVE
												WHERE	NAVE_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
											)
					OR RL.POSICION_ACTUAL=	(	SELECT 	TOP 1 POSICION_ID
												FROM 	POSICION
												WHERE	POSICION_COD=LTRIM(RTRIM(UPPER(@POSICION_O)))
											))
					AND RL.CANTIDAD >0
					AND RL.CAT_LOG_ID <> 'DIF_INV'		

		END

		IF (@POS_ANT IS NULL)
		BEGIN
			SELECT	@POSICION_D = NAVE_COD
			FROM	NAVE
			WHERE	NAVE_ID = @NAV_ANT
					AND PRE_EGRESO<>'1'
					AND PRE_INGRESO<>'1'
		END
		ELSE
		BEGIN
			SELECT	@POSICION_D = POSICION_COD
			FROM	POSICION
			WHERE	POSICION_ID = @POS_ANT
		END
	END ELSE BEGIN
		--CONTROLA POR PESO Y VOLUMEN.
		IF @TIPO=1 BEGIN
			--CONTROLA POR CONTENEDORA.
			EXEC [dbo].[MOB_REUBICACION_CONTENEDORA] @CONTENEDORA, @POSICION_D OUTPUT
		END ELSE BEGIN
			--CONTROLA POR PALLET.
			EXEC  DBO.MOB_REUBICACION_PALLET @CONTENEDORA, @POSICION_D OUTPUT
		END
	END
END




GO


