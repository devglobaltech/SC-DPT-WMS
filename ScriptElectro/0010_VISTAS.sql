USE [WMS_ELECTRO_906_MATCH]
GO

/*
Script created by Quest Change Director for SQL Server at 16/04/2013 03:43 p.m.
Please back up your database before running this script
*/

PRINT N'Synchronizing objects from DESARROLLO_906 to WMS_ELECTRO_906_MATCH'
GO

IF @@TRANCOUNT > 0 COMMIT TRANSACTION
GO

SET NUMERIC_ROUNDABORT OFF
SET ANSI_PADDING, ANSI_NULLS, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER ON
GO

IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE id=OBJECT_ID('tempdb..#tmpErrors')) DROP TABLE #tmpErrors
GO

CREATE TABLE #tmpErrors (Error int)
GO

SET XACT_ABORT OFF
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO

BEGIN TRANSACTION
GO

ALTER VIEW [dbo].[StockF]
AS
SELECT CAST(NULL AS varchar(30)) AS [ARTICULO], CAST(NULL AS numeric(38,5)) AS [CANTIDAD], CAST(NULL AS varchar(15)) AS [NAVE]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[vDET_DOCUMENTO]
AS
SELECT CAST(NULL AS numeric(20,0)) AS [DOCUMENTO_ID], CAST(NULL AS numeric(10,0)) AS [NRO_LINEA], CAST(NULL AS varchar(15)) AS [CLIENTE_ID], CAST(NULL AS varchar(30)) AS [PRODUCTO_ID], CAST(NULL AS numeric(20,5)) AS [CANTIDAD], CAST(NULL AS varchar(50)) AS [NRO_SERIE], CAST(NULL AS varchar(50)) AS [NRO_SERIE_PADRE], CAST(NULL AS varchar(15)) AS [EST_MERC_ID], CAST(NULL AS varchar(50)) AS [CAT_LOG_ID], CAST(NULL AS varchar(50)) AS [NRO_BULTO], CAST(NULL AS varchar(200)) AS [DESCRIPCION], CAST(NULL AS varchar(50)) AS [NRO_LOTE], CAST(NULL AS datetime) AS [FECHA_VENCIMIENTO], CAST(NULL AS varchar(50)) AS [NRO_DESPACHO], CAST(NULL AS varchar(50)) AS [NRO_PARTIDA], CAST(NULL AS varchar(5)) AS [UNIDAD_ID], CAST(NULL AS numeric(20,5)) AS [PESO], CAST(NULL AS varchar(5)) AS [UNIDAD_PESO], CAST(NULL AS numeric(20,5)) AS [VOLUMEN], CAST(NULL AS varchar(5)) AS [UNIDAD_VOLUMEN], CAST(NULL AS varchar(1)) AS [BUSC_INDIVIDUAL], CAST(NULL AS varchar(1)) AS [TIE_IN], CAST(NULL AS varchar(100)) AS [NRO_TIE_IN_PADRE], CAST(NULL AS varchar(100)) AS [NRO_TIE_IN], CAST(NULL AS varchar(1)) AS [ITEM_OK], CAST(NULL AS varchar(50)) AS [CAT_LOG_ID_FINAL], CAST(NULL AS varchar(20)) AS [MONEDA_ID], CAST(NULL AS numeric(10,3)) AS [COSTO], CAST(NULL AS varchar(100)) AS [PROP1], CAST(NULL AS varchar(100)) AS [PROP2], CAST(NULL AS varchar(100)) AS [PROP3], CAST(NULL AS numeric(10,3)) AS [LARGO], CAST(NULL AS numeric(10,3)) AS [ALTO], CAST(NULL AS numeric(10,3)) AS [ANCHO], CAST(NULL AS varchar(1)) AS [VOLUMEN_UNITARIO], CAST(NULL AS varchar(1)) AS [PESO_UNITARIO], CAST(NULL AS numeric(20,5)) AS [CANT_SOLICITADA], CAST(NULL AS varchar(1)) AS [TRACE_BACK_ORDER]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[vDET_DOCUMENTO_TRANSACCION]
AS
SELECT CAST(NULL AS numeric(20,0)) AS [DOC_TRANS_ID], CAST(NULL AS numeric(10,0)) AS [NRO_LINEA_TRANS], CAST(NULL AS numeric(20,0)) AS [DOCUMENTO_ID], CAST(NULL AS numeric(10,0)) AS [NRO_LINEA_DOC], CAST(NULL AS varchar(15)) AS [MOTIVO_ID], CAST(NULL AS varchar(15)) AS [EST_MERC_ID], CAST(NULL AS varchar(15)) AS [CLIENTE_ID], CAST(NULL AS varchar(50)) AS [CAT_LOG_ID], CAST(NULL AS varchar(1)) AS [ITEM_OK], CAST(NULL AS varchar(1)) AS [MOVIMIENTO_PENDIENTE], CAST(NULL AS numeric(20,0)) AS [DOC_TRANS_ID_REF], CAST(NULL AS numeric(10,0)) AS [NRO_LINEA_TRANS_REF]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[vDOCUMENTO]
AS
SELECT CAST(NULL AS numeric(20,0)) AS [DOCUMENTO_ID], CAST(NULL AS varchar(15)) AS [CLIENTE_ID], CAST(NULL AS varchar(5)) AS [TIPO_COMPROBANTE_ID], CAST(NULL AS varchar(5)) AS [TIPO_OPERACION_ID], CAST(NULL AS varchar(5)) AS [DET_TIPO_OPERACION_ID], CAST(NULL AS varchar(6)) AS [CPTE_PREFIJO], CAST(NULL AS varchar(20)) AS [CPTE_NUMERO], CAST(NULL AS datetime) AS [FECHA_CPTE], CAST(NULL AS datetime) AS [FECHA_PEDIDA_ENT], CAST(NULL AS varchar(20)) AS [SUCURSAL_ORIGEN], CAST(NULL AS varchar(20)) AS [SUCURSAL_DESTINO], CAST(NULL AS varchar(1)) AS [ANULADO], CAST(NULL AS varchar(15)) AS [MOTIVO_ANULACION], CAST(NULL AS numeric(20,5)) AS [PESO_TOTAL], CAST(NULL AS varchar(5)) AS [UNIDAD_PESO], CAST(NULL AS numeric(20,5)) AS [VOLUMEN_TOTAL], CAST(NULL AS varchar(5)) AS [UNIDAD_VOLUMEN], CAST(NULL AS numeric(10,0)) AS [TOTAL_BULTOS], CAST(NULL AS numeric(12,2)) AS [VALOR_DECLARADO], CAST(NULL AS varchar(20)) AS [ORDEN_DE_COMPRA], CAST(NULL AS numeric(10,0)) AS [CANT_ITEMS], CAST(NULL AS varchar(200)) AS [OBSERVACIONES], CAST(NULL AS varchar(3)) AS [STATUS], CAST(NULL AS varchar(30)) AS [NRO_REMITO], CAST(NULL AS datetime) AS [FECHA_ALTA_GTW], CAST(NULL AS datetime) AS [FECHA_FIN_GTW], CAST(NULL AS varchar(20)) AS [PERSONAL_ID], CAST(NULL AS varchar(20)) AS [TRANSPORTE_ID], CAST(NULL AS varchar(100)) AS [NRO_DESPACHO_IMPORTACION], CAST(NULL AS numeric(20,5)) AS [ALTO], CAST(NULL AS numeric(20,5)) AS [ANCHO], CAST(NULL AS numeric(20,5)) AS [LARGO], CAST(NULL AS varchar(5)) AS [UNIDAD_MEDIDA], CAST(NULL AS varchar(50)) AS [GRUPO_PICKING], CAST(NULL AS numeric(10,0)) AS [PRIORIDAD_PICKING]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[vDOCUMENTO_TRANSACCION]
AS
SELECT CAST(NULL AS numeric(20,0)) AS [DOC_TRANS_ID], CAST(NULL AS varchar(1)) AS [COMPLETADO], CAST(NULL AS varchar(200)) AS [OBSERVACIONES], CAST(NULL AS varchar(15)) AS [TRANSACCION_ID], CAST(NULL AS varchar(15)) AS [ESTACION_ACTUAL], CAST(NULL AS varchar(3)) AS [STATUS], CAST(NULL AS varchar(20)) AS [EST_MOV_ACTUAL], CAST(NULL AS numeric(20,0)) AS [ORDEN_ID], CAST(NULL AS varchar(1)) AS [IT_MOVER], CAST(NULL AS numeric(3,0)) AS [ORDEN_ESTACION], CAST(NULL AS varchar(5)) AS [TIPO_OPERACION_ID], CAST(NULL AS varchar(1)) AS [TR_POS_COMPLETA], CAST(NULL AS varchar(1)) AS [TR_ACTIVO], CAST(NULL AS varchar(20)) AS [USUARIO_ID], CAST(NULL AS varchar(20)) AS [TERMINAL], CAST(NULL AS datetime) AS [FECHA_ALTA_GTW], CAST(NULL AS varchar(10)) AS [TR_ACTIVO_ID], CAST(NULL AS varchar(60)) AS [SESSION_ID], CAST(NULL AS datetime) AS [FECHA_CAMBIO_TR], CAST(NULL AS datetime) AS [FECHA_FIN_GTW]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[VSTOCKEP]
AS
SELECT CAST(NULL AS varchar(15)) AS [COD. CLIENTE], CAST(NULL AS varchar(60)) AS [RAZON SOCIAL], CAST(NULL AS varchar(30)) AS [COD. PRODUCTO], CAST(NULL AS varchar(200)) AS [DESCRIPCION], CAST(NULL AS varchar(5)) AS [UNIDAD], CAST(NULL AS numeric(38,5)) AS [CANTIDAD], CAST(NULL AS varchar(15)) AS [NAVE], CAST(NULL AS varchar(15)) AS [CALLE], CAST(NULL AS varchar(15)) AS [COLUMNA], CAST(NULL AS varchar(15)) AS [NIVEL], CAST(NULL AS varchar(15)) AS [EST. MERC.], CAST(NULL AS varchar(50)) AS [CAT. LOG.], CAST(NULL AS varchar(50)) AS [NRO. SERIE], CAST(NULL AS varchar(50)) AS [NRO. BULTO], CAST(NULL AS varchar(50)) AS [NRO. LOTE], CAST(NULL AS varchar(50)) AS [NRO. DESPACHO], CAST(NULL AS varchar(50)) AS [NRO. PARTIDA], CAST(NULL AS varchar(100)) AS [NRO_PALLET], CAST(NULL AS varchar(100)) AS [LOTE_PROVEEDOR], CAST(NULL AS varchar(100)) AS [NRO. ANALISIS], CAST(NULL AS varchar(30)) AS [FECHA_VENCIMIENTO], CAST(NULL AS numeric(20,5)) AS [PESO], CAST(NULL AS varchar(5)) AS [UNIDAD PESO], CAST(NULL AS numeric(20,5)) AS [VOLUMEN], CAST(NULL AS varchar(5)) AS [UNIDAD VOLUMEN], CAST(NULL AS varchar(20)) AS [MONEDA], CAST(NULL AS numeric(10,3)) AS [COSTO], CAST(NULL AS varchar(50)) AS [PROVEEDOR], CAST(NULL AS varchar(30)) AS [FAMILIA], CAST(NULL AS varchar(30)) AS [SUB-FAMILIA], CAST(NULL AS varchar(30)) AS [FECHA CPTE.]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[VSYS_INT_DET_DOCUMENTO]
AS
SELECT CAST(NULL AS varchar(100)) AS [DOC_EXT], CAST(NULL AS numeric(20,0)) AS [NRO_LINEA], CAST(NULL AS varchar(15)) AS [CLIENTE_ID], CAST(NULL AS varchar(30)) AS [PRODUCTO_ID], CAST(NULL AS numeric(20,5)) AS [CANTIDAD_SOLICITADA], CAST(NULL AS numeric(20,5)) AS [CANTIDAD], CAST(NULL AS varchar(50)) AS [EST_MERC_ID], CAST(NULL AS varchar(50)) AS [CAT_LOG_ID], CAST(NULL AS varchar(100)) AS [NRO_BULTO], CAST(NULL AS varchar(500)) AS [DESCRIPCION], CAST(NULL AS varchar(100)) AS [NRO_LOTE], CAST(NULL AS varchar(100)) AS [NRO_PALLET], CAST(NULL AS datetime) AS [FECHA_VENCIMIENTO], CAST(NULL AS varchar(100)) AS [NRO_DESPACHO], CAST(NULL AS varchar(100)) AS [NRO_PARTIDA], CAST(NULL AS varchar(5)) AS [UNIDAD_ID], CAST(NULL AS varchar(5)) AS [UNIDAD_CONTENEDORA_ID], CAST(NULL AS numeric(10,3)) AS [PESO], CAST(NULL AS varchar(5)) AS [UNIDAD_PESO], CAST(NULL AS numeric(10,3)) AS [VOLUMEN], CAST(NULL AS varchar(5)) AS [UNIDAD_VOLUMEN], CAST(NULL AS varchar(100)) AS [PROP1], CAST(NULL AS varchar(100)) AS [PROP2], CAST(NULL AS varchar(100)) AS [PROP3], CAST(NULL AS numeric(10,3)) AS [LARGO], CAST(NULL AS numeric(10,3)) AS [ALTO], CAST(NULL AS numeric(10,3)) AS [ANCHO], CAST(NULL AS varchar(100)) AS [DOC_BACK_ORDER], CAST(NULL AS varchar(20)) AS [ESTADO], CAST(NULL AS datetime) AS [FECHA_ESTADO], CAST(NULL AS varchar(20)) AS [ESTADO_GT], CAST(NULL AS datetime) AS [FECHA_ESTADO_GT], CAST(NULL AS numeric(20,0)) AS [DOCUMENTO_ID], CAST(NULL AS numeric(20,0)) AS [NAVE_ID], CAST(NULL AS varchar(15)) AS [NAVE_COD]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[VSYS_INT_DOCUMENTO]
AS
SELECT CAST(NULL AS varchar(15)) AS [CLIENTE_ID], CAST(NULL AS varchar(50)) AS [TIPO_DOCUMENTO_ID], CAST(NULL AS varchar(6)) AS [CPTE_PREFIJO], CAST(NULL AS varchar(20)) AS [CPTE_NUMERO], CAST(NULL AS datetime) AS [FECHA_CPTE], CAST(NULL AS datetime) AS [FECHA_SOLICITUD_CPTE], CAST(NULL AS varchar(20)) AS [AGENTE_ID], CAST(NULL AS numeric(15,3)) AS [PESO_TOTAL], CAST(NULL AS varchar(5)) AS [UNIDAD_PESO], CAST(NULL AS numeric(15,3)) AS [VOLUMEN_TOTAL], CAST(NULL AS varchar(5)) AS [UNIDAD_VOLUMEN], CAST(NULL AS numeric(10,0)) AS [TOTAL_BULTOS], CAST(NULL AS varchar(100)) AS [ORDEN_DE_COMPRA], CAST(NULL AS varchar(1000)) AS [OBSERVACIONES], CAST(NULL AS varchar(50)) AS [NRO_REMITO], CAST(NULL AS varchar(50)) AS [NRO_DESPACHO_IMPORTACION], CAST(NULL AS varchar(100)) AS [DOC_EXT], CAST(NULL AS varchar(100)) AS [CODIGO_VIAJE], CAST(NULL AS varchar(100)) AS [INFO_ADICIONAL_1], CAST(NULL AS varchar(100)) AS [INFO_ADICIONAL_2], CAST(NULL AS varchar(100)) AS [INFO_ADICIONAL_3], CAST(NULL AS varchar(5)) AS [TIPO_COMPROBANTE], CAST(NULL AS varchar(20)) AS [ESTADO], CAST(NULL AS datetime) AS [FECHA_ESTADO], CAST(NULL AS varchar(20)) AS [ESTADO_GT], CAST(NULL AS datetime) AS [FECHA_ESTADO_GT]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

ALTER VIEW [dbo].[VSYS_INT_TIPO_DOCUMENTO_OP_ID]
AS
SELECT CAST(NULL AS varchar(50)) AS [TIPO_DOCUMENTO_ID], CAST(NULL AS varchar(50)) AS [DESCRIPCION], CAST(NULL AS varchar(5)) AS [TIPO_OPERACION_ID]
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[StockF]
AS
SELECT 	 T2.PRODUCTOID								[ARTICULO]
		,SUM(ISNULL(T2.CANTIDAD,0))					[CANTIDAD]
		,T2.STORAGE									[NAVE]
FROM   PRODUCTO P (NOLOCK)
		,  (	SELECT	DD.PRODUCTO_ID AS PRODUCTOID 
						,SUM(ISNULL(RL.CANTIDAD,0)) AS CANTIDAD 
						,ISNULL(N.NAVE_COD,N2.NAVE_COD) AS STORAGE 
				FROM  RL_DET_DOC_TRANS_POSICION RL (NOLOCK)
					  LEFT OUTER JOIN NAVE N (NOLOCK)            ON RL.NAVE_ACTUAL = N.NAVE_ID 
			          LEFT OUTER JOIN POSICION P  (NOLOCK)       ON RL.POSICION_ACTUAL = P.POSICION_ID 
					  LEFT OUTER JOIN NAVE N2   (NOLOCK)         ON P.NAVE_ID = N2.NAVE_ID 
					  ,DET_DOCUMENTO_TRANSACCION DDT (NOLOCK)
					  ,DET_DOCUMENTO DD (NOLOCK) 
					  INNER JOIN DOCUMENTO D (NOLOCK) ON(DD.DOCUMENTO_ID=D.DOCUMENTO_ID)
					  ,CATEGORIA_LOGICA CL (NOLOCK)
					  ,DOCUMENTO_TRANSACCION DT (NOLOCK)
				WHERE 1<>0 
					  AND RL.DOC_TRANS_ID = DDT.DOC_TRANS_ID 
					  AND RL.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS 
					  AND DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID 
					  AND DDT.DOC_TRANS_ID = DT.DOC_TRANS_ID 
					  AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA 
					  AND RL.CAT_LOG_ID = CL.CAT_LOG_ID 
					  AND RL.CLIENTE_ID = CL.CLIENTE_ID 
					  AND RL.DISPONIBLE= '1'
					  AND ISNULL(N.DEPOSITO_ID,N2.DEPOSITO_ID)='DEFAULT'

				 GROUP BY DD.PRODUCTO_ID
						 ,N.NAVE_COD  
						 ,N2.NAVE_COD
						 ) T2 
     WHERE T2.PRODUCTOID = P.PRODUCTO_ID 

GROUP BY T2.PRODUCTOID 
         ,T2.STORAGE
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[vDET_DOCUMENTO]
AS

SELECT * FROM DET_DOCUMENTO (NOLOCK)
UNION 
SELECT * FROM DET_DOCUMENTO_HISTORICO (NOLOCK)
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[vDET_DOCUMENTO_TRANSACCION]
AS
SELECT * FROM DET_DOCUMENTO_TRANSACCION (NOLOCK)
UNION
SELECT * FROM DET_DOCUMENTO_TRANSACCION_HISTORICO(NOLOCK)
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[vDOCUMENTO]
As
SELECT * FROM DOCUMENTO (nolock)
UNION 
SELECT * FROM DOCUMENTO_HISTORICO(nolock)
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[vDOCUMENTO_TRANSACCION]
AS
SELECT * FROM DOCUMENTO_TRANSACCION (nolock)
UNION
SELECT * FROM DOCUMENTO_TRANSACCION_HISTORICO(nolock)
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

EXECUTE [sp_refreshsqlmodule]
	@name  = N'[dbo].[vPICKING]'
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VSTOCKEP]
AS
SELECT     T2_1.CLIENTEID AS [COD. CLIENTE], C.RAZON_SOCIAL AS [RAZON SOCIAL], T2_1.PRODUCTOID AS [COD. PRODUCTO], P.DESCRIPCION, 
                      T2_1.UNIDAD_ID AS UNIDAD, SUM(ISNULL(T2_1.CANTIDAD, 0)) AS CANTIDAD, T2_1.STORAGE AS NAVE, T2_1.CALLECOD AS CALLE, 
                      T2_1.COLUMNACOD AS COLUMNA, T2_1.NIVELCOD AS NIVEL, T2_1.EST_MERC_ID AS [EST. MERC.], T2_1.CATEGLOGID AS [CAT. LOG.], 
                      T2_1.NRO_SERIE AS [NRO. SERIE], T2_1.NRO_BULTO AS [NRO. BULTO], T2_1.NRO_LOTE AS [NRO. LOTE], 
                      T2_1.NRO_DESPACHO AS [NRO. DESPACHO], T2_1.NRO_PARTIDA AS [NRO. PARTIDA], T2_1.PROP1 AS NRO_PALLET, 
                      T2_1.PROP2 AS LOTE_PROVEEDOR, T2_1.PROP3 AS [NRO. ANALISIS], CONVERT(VARCHAR, T2_1.FECHA_VENCIMIENTO, 103) 
                      AS FECHA_VENCIMIENTO, T2_1.PESO, T2_1.UNIDAD_PESO AS [UNIDAD PESO], T2_1.VOLUMEN, T2_1.UNIDAD_VOLUMEN AS [UNIDAD VOLUMEN], 
                      T2_1.MONEDA_ID AS MONEDA, T2_1.COSTO, T2_1.NOMBRE AS PROVEEDOR, T2_1.FAMILIA_ID AS FAMILIA, T2_1.SUB_FAMILIA_ID AS [SUB-FAMILIA], 
                      CONVERT(VARCHAR, T2_1.FECHA_CPTE, 103) AS [FECHA CPTE.]
FROM         dbo.CLIENTE AS C WITH (readpast) INNER JOIN
                          (SELECT     CLIENTEID, PRODUCTOID, SUM(CANTIDAD) AS CANTIDAD, NRO_SERIE, NRO_LOTE, NRO_PARTIDA, FECHA_VENCIMIENTO, 
                                                   NRO_DESPACHO, NRO_BULTO, PESO, VOLUMEN, TIE_IN, EST_MERC_ID, UNIDAD_PESO, UNIDAD_VOLUMEN, PROP1, PROP2, PROP3, 
                                                   UNIDAD_ID, MONEDA_ID, COSTO, CAT_LOG_ID_FINAL, DESCRIPCION
                            FROM          (SELECT     DD.CLIENTE_ID AS CLIENTEID, DD.PRODUCTO_ID AS PRODUCTOID, SUM(ISNULL(DD.CANTIDAD, 0)) AS CANTIDAD, 
                                                                           DD.NRO_SERIE, DD.NRO_LOTE, DD.NRO_PARTIDA, DD.FECHA_VENCIMIENTO, DD.NRO_DESPACHO, DD.NRO_BULTO, 
                                                                           DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, DD.TIE_IN, DD.EST_MERC_ID, DD.PROP1, DD.PROP2, 
                                                                           DD.PROP3, DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, DD.CAT_LOG_ID_FINAL, DD.DESCRIPCION
                                                    FROM          dbo.DOCUMENTO AS D WITH (readpast) INNER JOIN
                                                                           dbo.DET_DOCUMENTO AS DD WITH (readpast) ON D.DOCUMENTO_ID = DD.DOCUMENTO_ID
                                                    WHERE      (D.STATUS = 'D20') AND (D.TIPO_OPERACION_ID = 'EGR')
                                                    GROUP BY DD.CLIENTE_ID, DD.PRODUCTO_ID, DD.NRO_SERIE, DD.NRO_LOTE, DD.NRO_PARTIDA, DD.FECHA_VENCIMIENTO, 
                                                                           DD.NRO_DESPACHO, DD.NRO_BULTO, DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, DD.TIE_IN, 
                                                                           DD.EST_MERC_ID, DD.PROP1, DD.PROP2, DD.PROP3, DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, DD.CAT_LOG_ID_FINAL, 
                                                                           DD.DESCRIPCION
                                                    UNION ALL
                                                    SELECT     DD.CLIENTE_ID AS CLIENTEID, DD.PRODUCTO_ID AS PRODUCTOID, SUM(ISNULL(DD.CANTIDAD, 0)) AS CANTIDAD, 
                                                                          DD.NRO_SERIE, DD.NRO_LOTE, DD.NRO_PARTIDA, DD.FECHA_VENCIMIENTO, DD.NRO_DESPACHO, DD.NRO_BULTO, 
                                                                          DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, DD.TIE_IN, DD.EST_MERC_ID, DD.PROP1, DD.PROP2, 
                                                                          DD.PROP3, DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, DD.CAT_LOG_ID_FINAL, DD.DESCRIPCION
                                                    FROM         dbo.DET_DOCUMENTO AS DD WITH (readpast) INNER JOIN
                                                                          dbo.DET_DOCUMENTO_TRANSACCION AS DDT WITH (readpast) ON DD.DOCUMENTO_ID = DDT.DOCUMENTO_ID AND 
                                                                          DD.NRO_LINEA = DDT.NRO_LINEA_DOC INNER JOIN
                                                                          dbo.DOCUMENTO_TRANSACCION AS DT WITH (readpast) ON DDT.DOC_TRANS_ID = DT.DOC_TRANS_ID
                                                    WHERE     (1 <> 0) AND (DT.STATUS = 'T10') AND (DT.TIPO_OPERACION_ID = 'EGR') AND (NOT EXISTS
                                                                              (SELECT     RL_ID
                                                                                FROM          dbo.RL_DET_DOC_TRANS_POSICION AS RL WITH (readpast)
                                                                                WHERE      (DOC_TRANS_ID_EGR = DDT.DOC_TRANS_ID) AND (NRO_LINEA_TRANS_EGR = DDT.NRO_LINEA_TRANS)))
                                                    GROUP BY DD.CLIENTE_ID, DD.PRODUCTO_ID, DD.NRO_SERIE, DD.NRO_LOTE, DD.NRO_PARTIDA, DD.FECHA_VENCIMIENTO, 
                                                                          DD.NRO_DESPACHO, DD.NRO_BULTO, DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, DD.TIE_IN, 
                                                                          DD.EST_MERC_ID, DD.PROP1, DD.PROP2, DD.PROP3, DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, DD.CAT_LOG_ID_FINAL, 
                                                                          DD.DESCRIPCION) AS T2
                            WHERE      (1 <> 0)
                            GROUP BY CLIENTEID, PRODUCTOID, NRO_SERIE, NRO_LOTE, NRO_PARTIDA, FECHA_VENCIMIENTO, NRO_DESPACHO, NRO_BULTO, PESO, 
                                                   UNIDAD_PESO, VOLUMEN, UNIDAD_VOLUMEN, TIE_IN, EST_MERC_ID, PROP1, PROP2, PROP3, UNIDAD_ID, MONEDA_ID, COSTO, 
                                                   CAT_LOG_ID_FINAL, DESCRIPCION) AS T1 RIGHT OUTER JOIN
                          (SELECT     RL.CAT_LOG_ID AS CATEGLOGID, DD.CLIENTE_ID AS CLIENTEID, DD.PRODUCTO_ID AS PRODUCTOID, SUM(ISNULL(RL.CANTIDAD, 0)) 
                                                   AS CANTIDAD, DD.NRO_SERIE, DD.NRO_LOTE, DD.FECHA_VENCIMIENTO, DD.NRO_DESPACHO, DD.NRO_BULTO, DD.NRO_PARTIDA, 
                                                   DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, PROD.KIT, DD.TIE_IN, DD.NRO_TIE_IN_PADRE AS TIE_IN_PADRE, 
                                                   DD.NRO_TIE_IN, RL.EST_MERC_ID, ISNULL(N.NAVE_COD, N2.NAVE_COD) AS STORAGE, ISNULL(RL.NAVE_ACTUAL, P.NAVE_ID) 
                                                   AS NAVEID, CALN.calle_cod AS CALLECOD, CALN.calle_id AS CALLEID, COLN.COLUMNA_COD AS COLUMNACOD, 
                                                   COLN.COLUMNA_ID AS COLUMNAID, NN.NIVEL_COD AS NIVELCOD, NN.NIVEL_ID AS NIVELID, DD.PROP1, DD.PROP2, DD.PROP3, 
                                                   DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, S.NOMBRE, DD.DESCRIPCION, PROD.FAMILIA_ID, PROD.SUB_FAMILIA_ID, 
                                                   D.FECHA_CPTE
                            FROM          dbo.RL_DET_DOC_TRANS_POSICION AS RL WITH (readpast) LEFT OUTER JOIN
                                                   dbo.NAVE AS N WITH (readpast) ON RL.NAVE_ACTUAL = N.NAVE_ID LEFT OUTER JOIN
                                                   dbo.POSICION AS P WITH (readpast) ON RL.POSICION_ACTUAL = P.POSICION_ID LEFT OUTER JOIN
                                                   dbo.NAVE AS N2 WITH (readpast) ON P.NAVE_ID = N2.NAVE_ID LEFT OUTER JOIN
                                                   dbo.calle_nave AS CALN WITH (readpast) ON P.CALLE_ID = CALN.calle_id LEFT OUTER JOIN
                                                   dbo.COLUMNA_NAVE AS COLN WITH (readpast) ON P.COLUMNA_ID = COLN.COLUMNA_ID LEFT OUTER JOIN
                                                   dbo.NIVEL_NAVE AS NN WITH (readpast) ON P.NIVEL_ID = NN.NIVEL_ID INNER JOIN
                                                   dbo.DET_DOCUMENTO_TRANSACCION AS DDT WITH (readpast) ON RL.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND 
                                                   RL.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS INNER JOIN
                                                   dbo.DET_DOCUMENTO AS DD WITH (readpast) INNER JOIN
                                                   dbo.DOCUMENTO AS D WITH (readpast) ON DD.DOCUMENTO_ID = D.DOCUMENTO_ID LEFT OUTER JOIN
                                                   dbo.SUCURSAL AS S ON S.SUCURSAL_ID = D.SUCURSAL_ORIGEN AND S.CLIENTE_ID = D.CLIENTE_ID ON 
                                                   DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA INNER JOIN
                                                   dbo.DOCUMENTO_TRANSACCION AS DT WITH (readpast) ON DDT.DOC_TRANS_ID = DT.DOC_TRANS_ID INNER JOIN
                                                   dbo.CLIENTE AS C WITH (readpast) ON DD.CLIENTE_ID = C.CLIENTE_ID INNER JOIN
                                                   dbo.PRODUCTO AS PROD WITH (readpast) ON DD.PRODUCTO_ID = PROD.PRODUCTO_ID AND 
                                                   DD.CLIENTE_ID = PROD.CLIENTE_ID INNER JOIN
                                                   dbo.CATEGORIA_LOGICA AS CL WITH (readpast) ON RL.CAT_LOG_ID = CL.CAT_LOG_ID AND RL.CLIENTE_ID = CL.CLIENTE_ID
                            WHERE      (1 <> 0) AND (RL.DISPONIBLE = '1') AND (ISNULL(P.POS_LOCKEADA, '0') = '0') AND (ISNULL(N.DEPOSITO_ID, N2.DEPOSITO_ID) 
                                                   = 'DEFAULT') AND (0 =
                                                       (SELECT     (CASE WHEN (COUNT(POSICION_ID)) > 0 THEN 1 ELSE 0 END) AS VALOR
                                                         FROM          dbo.RL_POSICION_PROHIBIDA_CLIENTE WITH (readpast)
                                                         WHERE      (POSICION_ID = ISNULL(P.NIVEL_ID, 0)) AND (CLIENTE_ID = DD.CLIENTE_ID)))
                            GROUP BY RL.CAT_LOG_ID, DD.CLIENTE_ID, DD.PRODUCTO_ID, DD.NRO_SERIE, DD.NRO_LOTE, DD.FECHA_VENCIMIENTO, 
                                                   DD.NRO_DESPACHO, DD.NRO_BULTO, DD.NRO_PARTIDA, DD.PESO, DD.UNIDAD_PESO, DD.VOLUMEN, DD.UNIDAD_VOLUMEN, 
                                                   RL.NAVE_ACTUAL, P.NAVE_ID, N.NAVE_COD, N2.NAVE_COD, CALN.calle_cod, CALN.calle_id, COLN.COLUMNA_COD, COLN.COLUMNA_ID, 
                                                   NN.NIVEL_COD, NN.NIVEL_ID, PROD.KIT, DD.TIE_IN, DD.NRO_TIE_IN_PADRE, DD.NRO_TIE_IN, RL.EST_MERC_ID, DD.PROP1, 
                                                   DD.PROP2, DD.PROP3, DD.UNIDAD_ID, DD.MONEDA_ID, DD.COSTO, S.NOMBRE, DD.DESCRIPCION, PROD.FAMILIA_ID, 
                                                   PROD.SUB_FAMILIA_ID, D.FECHA_CPTE) AS T2_1 ON ISNULL(T2_1.CLIENTEID, 0) = ISNULL(T1.CLIENTEID, 0) AND 
                      ISNULL(T2_1.PRODUCTOID, 0) = ISNULL(T1.PRODUCTOID, 0) AND ISNULL(T2_1.NRO_SERIE, 0) = ISNULL(T1.NRO_SERIE, 0) AND 
                      ISNULL(T2_1.NRO_LOTE, 0) = ISNULL(T1.NRO_LOTE, 0) AND ISNULL(T2_1.NRO_DESPACHO, 0) = ISNULL(T1.NRO_DESPACHO, 0) AND 
                      ISNULL(T2_1.NRO_BULTO, 0) = ISNULL(T1.NRO_BULTO, 0) AND ISNULL(T2_1.NRO_PARTIDA, 0) = ISNULL(T1.NRO_PARTIDA, 0) AND 
                      ISNULL(T2_1.PROP1, 0) = ISNULL(T1.PROP1, 0) AND ISNULL(T2_1.PROP2, 0) = ISNULL(T1.PROP2, 0) AND ISNULL(T2_1.PROP3, 0) 
                      = ISNULL(T1.PROP3, 0) AND ISNULL(T2_1.UNIDAD_ID, 0) = ISNULL(T1.UNIDAD_ID, 0) AND ISNULL(T2_1.FECHA_VENCIMIENTO, '01/01/1900') 
                      = ISNULL(T1.FECHA_VENCIMIENTO, '01/01/1900') AND ISNULL(T2_1.EST_MERC_ID, 0) = ISNULL(T1.EST_MERC_ID, 0) AND 
                      ISNULL(T2_1.CATEGLOGID, 0) = ISNULL(T1.CAT_LOG_ID_FINAL, 0) LEFT OUTER JOIN
                      dbo.ESTADO_MERCADERIA_RL AS EMRL WITH (readpast) ON T2_1.CLIENTEID = EMRL.CLIENTE_ID AND 
                      T2_1.EST_MERC_ID = EMRL.EST_MERC_ID ON C.CLIENTE_ID = T2_1.CLIENTEID INNER JOIN
                      dbo.PRODUCTO AS P WITH (readpast) ON T2_1.CLIENTEID = P.CLIENTE_ID AND T2_1.PRODUCTOID = P.PRODUCTO_ID
WHERE     (1 <> 0)
GROUP BY T2_1.CLIENTEID, T2_1.PRODUCTOID, T2_1.STORAGE, T2_1.NAVEID, T2_1.CALLECOD, T2_1.CALLEID, T2_1.COLUMNACOD, T2_1.COLUMNAID, 
                      T2_1.NIVELCOD, T2_1.NIVELID, T2_1.EST_MERC_ID, T2_1.CATEGLOGID, T2_1.NRO_SERIE, T2_1.NRO_BULTO, T2_1.NRO_LOTE, 
                      T2_1.NRO_DESPACHO, T2_1.NRO_PARTIDA, T2_1.PROP1, T2_1.PROP2, T2_1.PROP3, T2_1.FECHA_VENCIMIENTO, T2_1.PESO, T2_1.UNIDAD_PESO, 
                      T2_1.VOLUMEN, T2_1.UNIDAD_VOLUMEN, T2_1.KIT, T2_1.TIE_IN, T2_1.TIE_IN_PADRE, T2_1.NRO_TIE_IN, C.RAZON_SOCIAL, P.DESCRIPCION, 
                      T2_1.UNIDAD_ID, T2_1.MONEDA_ID, T2_1.COSTO, T2_1.NOMBRE, T2_1.DESCRIPCION, T2_1.FAMILIA_ID, T2_1.SUB_FAMILIA_ID, T2_1.FECHA_CPTE
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[VSYS_INT_DET_DOCUMENTO]
AS
SELECT * FROM SYS_INT_DET_DOCUMENTO
UNION
SELECT * FROM SYS_INT_DET_DOCUMENTO_HISTORICO
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER  VIEW [dbo].[VSYS_INT_DOCUMENTO]
AS
SELECT * FROM SYS_INT_DOCUMENTO
UNION
SELECT * FROM SYS_INT_DOCUMENTO_HISTORICO
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VSYS_INT_TIPO_DOCUMENTO_OP_ID] AS
	SELECT	S.TIPO_DOCUMENTO_ID,T.DESCRIPCION ,T.TIPO_OPERACION_ID
	FROM	SYS_INT_TIPO_DOCUMENTO S INNER JOIN TIPO_COMPROBANTE T
		ON(S.TIPO_DOCUMENTO_ID=T.TIPO_COMPROBANTE_ID)
GO

IF @@ERROR <> 0
BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   INSERT INTO #tmpErrors (Error) SELECT 1
   BEGIN TRANSACTION
END
GO

IF @@TRANCOUNT > 0
BEGIN
   IF EXISTS (SELECT * FROM #tmpErrors)
       ROLLBACK TRANSACTION
   ELSE
       COMMIT TRANSACTION
END
GO

DROP TABLE #tmpErrors
GO