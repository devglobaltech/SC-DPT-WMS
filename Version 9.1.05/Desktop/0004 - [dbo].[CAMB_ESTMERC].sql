
/****** Object:  StoredProcedure [dbo].[CAMB_ESTMERC]    Script Date: 03/13/2014 11:15:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CAMB_ESTMERC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CAMB_ESTMERC]
GO

/****** Object:  StoredProcedure [dbo].[CAMB_ESTMERC]    Script Date: 03/13/2014 11:15:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[CAMB_ESTMERC]
	@CLIENTE_ID	as varchar(15),
	@PRODUCTO_ID   as varchar(30),
	@CANTIDAD as numeric(20,5),
	@NRO_LOTE as varchar(50),
	@NRO_PARTIDA as varchar(50),
	@NRO_BULTO as varchar(50),
	@NRO_SERIE as varchar(50),
	@CAT_LOG_ID as varchar(50),
	@EST_MERC_ID as varchar(15),
	@PROP1 as varchar(100),
	@PROP2 as varchar(100),
	@PROP3 as varchar(100),
	@NEW_EST_MERC_ID as varchar(50),
	@TOTAL_A_CAMBIAR as numeric(20,5),
	--AGREGADO DFERNANDEZ
	@UBICACION AS VARCHAR(45)
AS
BEGIN

	--Corre Todo o no corre nada
	SET XACT_ABORT ON

	DECLARE @CANT_TOTAL_UBIC AS NUMERIC(20,5)
	DECLARE @RsRlId AS CURSOR
	DECLARE @NAVE_ID AS NUMERIC(20,0)
	DECLARE @NAVE_COD AS VARCHAR(100)
	DECLARE @POSICION_ID AS NUMERIC(20,0)
	DECLARE @FECHA_VTO AS DATETIME
	DECLARE @NRO_DESPACHO AS VARCHAR(50)
	DECLARE @MAX_A_DESC AS NUMERIC(20,5)
	DECLARE @STR_TOTAL_A_CAMBIAR AS VARCHAR(MAX)
	DECLARE @STR_MAX_A_DESC AS VARCHAR(MAX)
	DECLARE @UNIDAD_ID AS VARCHAR(100)
	DECLARE @VERIFICADO AS VARCHAR(1)
	DECLARE @RLID AS NUMERIC(20,0)
	DECLARE @NEW_CANT AS NUMERIC(20,5)
	DECLARE @SECUENCIA AS NUMERIC (20,0)
	--AGREGADO DFERNANDEZ
	DECLARE @VERIF_NAVE AS NUMERIC(20,0)
	DECLARE @VERIF_POS AS NUMERIC(20,0)

	EXEC Verificar_Cant_Ajustar 	@CLIENTE_ID,@PRODUCTO_ID,@CANTIDAD,@NRO_LOTE,@NRO_PARTIDA,@NRO_BULTO,@NRO_SERIE,@CAT_LOG_ID,@EST_MERC_ID,@PROP1,@PROP2,@PROP3,@TOTAL_A_CAMBIAR,@VERIFICADO OUTPUT,@MAX_A_DESC OUTPUT

	IF @VERIFICADO = '0'
	BEGIN
		SET @STR_TOTAL_A_CAMBIAR = DBO.NUM_A_TEXT(@TOTAL_A_CAMBIAR) 
		SET @STR_MAX_A_DESC = DBO.NUM_A_TEXT(@MAX_A_DESC)
		raiserror('ERROR: NO ES POSIBLE MODIFICAR EL ESTADO DE MERCADERIA A %d UNIDADES MAXIMO DISPONIBLE A MODIFICAR : %d',16,1,@TOTAL_A_CAMBIAR,@MAX_A_DESC)
		return
	END

	UPDATE historico_pos_ocupadas2 SET fecha = getdate()
	
	--VERIFICO SI LA UBICACION INGRESADA ES UNA POSICION O UNA NAVE SIN LAYOUT.
	SELECT 	@VERIF_NAVE = NAVE_ID
	FROM	NAVE
	WHERE	NAVE_COD=@UBICACION
			AND PRE_INGRESO='0'
			AND PRE_EGRESO='0'
			AND NAVE_TIENE_LAYOUT='0'
			
	IF @VERIF_NAVE IS NULL
		BEGIN
		SELECT 	@VERIF_POS=POSICION_ID
		FROM	POSICION
		WHERE	POSICION_COD=@UBICACION
	END

	IF (@VERIF_NAVE IS NULL) AND (@VERIF_POS IS NULL)
		BEGIN
		RAISERROR('NAVE O CALLE INEXISTENTE',16,1)
		RETURN
	END	

	set @NEW_CANT = @TOTAL_A_CAMBIAR
	Set @RsRlId = Cursor For

	SELECT	
			RDDT.RL_ID,P.NAVE_ID,N.NAVE_COD,P.POSICION_ID,DD.FECHA_VENCIMIENTO,DD.NRO_DESPACHO,DD.UNIDAD_ID
	FROM
			DET_DOCUMENTO DD 
			INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON(DD.DOCUMENTO_ID = DDT.DOCUMENTO_ID AND DD.NRO_LINEA = DDT.NRO_LINEA_DOC)
			INNER JOIN RL_DET_DOC_TRANS_POSICION RDDT ON(RDDT.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS = RDDT.NRO_LINEA_TRANS)
			LEFT JOIN POSICION P ON(P.POSICION_ID = RDDT.POSICION_ACTUAL)
			LEFT JOIN NAVE N ON(RDDT.NAVE_ACTUAL = N.NAVE_ID)
	WHERE 
			DD.CLIENTE_ID = @CLIENTE_ID
			AND DD.PRODUCTO_ID = @PRODUCTO_ID
			AND ((NRO_LOTE = @NRO_LOTE) OR (@NRO_LOTE IS NULL))
			AND ((NRO_PARTIDA = @NRO_PARTIDA) OR (@NRO_PARTIDA IS NULL))
			AND ((NRO_BULTO = @NRO_BULTO) OR (@NRO_BULTO IS NULL))
			AND ((NRO_SERIE = @NRO_SERIE) OR (@NRO_SERIE IS NULL))
			AND RDDT.CAT_LOG_ID = @CAT_LOG_ID
			AND ((RDDT.EST_MERC_ID = @EST_MERC_ID) OR (@EST_MERC_ID IS NULL))
			AND PROP1 = @PROP1
			AND ((PROP2 = @PROP2) OR (@PROP2 IS NULL))
			AND ((PROP3 = @PROP3) OR (@PROP3 IS NULL))
			AND ((RDDT.POSICION_ACTUAL = @VERIF_POS) OR (@VERIF_POS IS NULL))
			AND ((RDDT.NAVE_ACTUAL = @VERIF_NAVE) OR (@VERIF_NAVE IS NULL))

	Open @RsRlId
		Fetch Next From @RsRlId into
									@RLID,
									@NAVE_ID,
									@NAVE_COD,
									@POSICION_ID,
									@FECHA_VTO,
									@NRO_DESPACHO,
									@UNIDAD_ID
		While @@Fetch_Status=0
		Begin	
			
			SELECT @CANT_TOTAL_UBIC = CANTIDAD
			FROM
				RL_DET_DOC_TRANS_POSICION
			WHERE RL_ID = @RLID
			
			IF (@CANT_TOTAL_UBIC <= @TOTAL_A_CAMBIAR)
				BEGIN
					SET @NEW_CANT = @TOTAL_A_CAMBIAR 
					SET @TOTAL_A_CAMBIAR = @TOTAL_A_CAMBIAR - @CANT_TOTAL_UBIC
					--Aca Realizo el cambio de categoria logica
					UPDATE RL_DET_DOC_TRANS_POSICION SET EST_MERC_ID = @NEW_EST_MERC_ID
					WHERE RL_ID = @RLID						
				END
			ELSE
				BEGIN
					INSERT INTO RL_DET_DOC_TRANS_POSICION
								   (DOC_TRANS_ID
								   ,NRO_LINEA_TRANS
								   ,POSICION_ANTERIOR
								   ,POSICION_ACTUAL
								   ,CANTIDAD
								   ,TIPO_MOVIMIENTO_ID
								   ,ULTIMA_ESTACION
								   ,ULTIMA_SECUENCIA
								   ,NAVE_ANTERIOR
								   ,NAVE_ACTUAL
								   ,DOCUMENTO_ID
								   ,NRO_LINEA
								   ,DISPONIBLE
								   ,DOC_TRANS_ID_EGR
								   ,NRO_LINEA_TRANS_EGR
								   ,DOC_TRANS_ID_TR
								   ,NRO_LINEA_TRANS_TR
								   ,CLIENTE_ID
								   ,CAT_LOG_ID
								   ,CAT_LOG_ID_FINAL
								   ,EST_MERC_ID)
							(SELECT DOC_TRANS_ID
								   ,NRO_LINEA_TRANS
								   ,POSICION_ANTERIOR
								   ,POSICION_ACTUAL
								   ,@TOTAL_A_CAMBIAR
								   ,TIPO_MOVIMIENTO_ID
								   ,ULTIMA_ESTACION
								   ,ULTIMA_SECUENCIA
								   ,NAVE_ANTERIOR
								   ,NAVE_ACTUAL
								   ,DOCUMENTO_ID
								   ,NRO_LINEA
								   ,DISPONIBLE
								   ,DOC_TRANS_ID_EGR
								   ,NRO_LINEA_TRANS_EGR
								   ,DOC_TRANS_ID_TR
								   ,NRO_LINEA_TRANS_TR
								   ,CLIENTE_ID
								   ,@CAT_LOG_ID
								   ,NULL
								   ,@NEW_EST_MERC_ID
								FROM
									RL_DET_DOC_TRANS_POSICION
								WHERE
									RL_ID = @RLID)
					
					UPDATE RL_DET_DOC_TRANS_POSICION SET CANTIDAD = (@CANT_TOTAL_UBIC - @TOTAL_A_CAMBIAR)
					WHERE RL_ID = @RLID	

					SET @TOTAL_A_CAMBIAR = 0
				END
				
				
	
				IF (@TOTAL_A_CAMBIAR = 0)
				BEGIN
					CLOSE @RsRlId
					DEALLOCATE @RsRlId
					EXEC GET_VALUE_FOR_SEQUENCE 'AJUSTE_EST_MERC',@SECUENCIA OUTPUT
					EXEC Ajuste_Estado_Mercaderia @CLIENTE_ID,'ST03',@SECUENCIA,@PRODUCTO_ID,@NEW_CANT,@EST_MERC_ID,@NEW_EST_MERC_ID,@NRO_BULTO,NULL,@NRO_LOTE,@PROP1,@FECHA_VTO,@NRO_DESPACHO,@NRO_PARTIDA,@UNIDAD_ID,NULL,@NAVE_COD,@EST_MERC_ID
					EXEC SYS_AUDITORIA_CAT_MERC_INSERT_RECORD 'ESTADO MERCADERIA',@RLID,@CLIENTE_ID,@NAVE_ID,@POSICION_ID,@EST_MERC_ID,@NEW_EST_MERC_ID,@CANTIDAD,@NEW_CANT
					EXEC AUDITORIA_HIST_INSERT_ESTMERC @RLID,@EST_MERC_ID,@NEW_EST_MERC_ID,@NEW_CANT
					RETURN
				END
				Fetch Next From @RsRlId into
									@RLID,
									@NAVE_ID,
									@NAVE_COD,
									@POSICION_ID,
									@FECHA_VTO,
									@NRO_DESPACHO,
									@UNIDAD_ID
		End

CLOSE @RsRlId
DEALLOCATE @RsRlId
END

GO


