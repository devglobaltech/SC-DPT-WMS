/****** Object:  StoredProcedure [dbo].[Mob_Guardado_Prod]    Script Date: 07/04/2013 17:09:28 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Mob_Guardado_Prod]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Mob_Guardado_Prod]
GO

CREATE PROCEDURE [dbo].[Mob_Guardado_Prod]
	@DOCUMENTO_ID	NUMERIC(20,0),
	@CLIENTE		VARCHAR(30),
	@PRODUCTO		VARCHAR(30) OUTPUT,		--OK
	@DESCRIPCION	VARCHAR(50) OUTPUT,		--OK
	@LINEA			SMALLINT	OUTPUT,		--OK
	@QTY			FLOAT		OUTPUT,		
	@FRACC			CHAR(1)		OUTPUT		--OK
AS
BEGIN
	SET NOCOUNT ON
	SET XACT_ABORT ON
	--DECLARACION DE VARIABLES.
	DECLARE @COUNT			SMALLINT
	DECLARE @CONTENEDORA	VARCHAR(1)
	
	--PRIMERO TENGO QUE SABER SI ES EL PRODUCTO O UN EAN/DUN.
	SELECT	@COUNT=COUNT(*)
	FROM	PRODUCTO
	WHERE	CLIENTE_ID=@CLIENTE
			AND PRODUCTO_ID=@PRODUCTO
	
	IF @COUNT=0
	BEGIN
		--NO ES UN PRODUCTO, TENGO QUE SACAR EL EAN/DUN.
		SET @COUNT=NULL
		SELECT	@COUNT=COUNT(*)
		FROM	RL_PRODUCTO_CODIGOS
		WHERE	CLIENTE_ID=@CLIENTE
				AND CODIGO=@PRODUCTO
			 
		
		IF @COUNT=0
		BEGIN
			--NO EXISTE EL PRODUCTO Y EL CODIGO ES INVALIDO.
			RAISERROR('El producto ingresado es inexistente.',16,1)
			RETURN
		END
		ELSE
		BEGIN
			--ENCONTRE EL PRODUCTO A PARTIR DEL CODIGO Y RECUPERO EL PRODUCTO_ID.
			SELECT	@PRODUCTO=PRODUCTO_ID 
			FROM	RL_PRODUCTO_CODIGOS
			WHERE	CLIENTE_ID=@CLIENTE
					AND CODIGO=@PRODUCTO
		END
	END
	--SACO LA DESCRIPCION DEL PRODUCTO Y SI ES O NO FRACCIONABLE.
	SELECT	@DESCRIPCION=DESCRIPCION, @FRACC=ISNULL(FRACCIONABLE,'0'),@CONTENEDORA=ISNULL(FLG_CONTENEDORA,'0')
	FROM	PRODUCTO
	WHERE	CLIENTE_ID=@CLIENTE
			AND PRODUCTO_ID=@PRODUCTO
			
	
	--OBTENGO EL NUMERO DE LINEA DEL DOCUMENTO.
	SELECT	@LINEA=DD.NRO_LINEA
	FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
			ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
			INNER JOIN RL_DET_DOC_TRANS_POSICION RL
			ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
	WHERE	DD.DOCUMENTO_ID=@DOCUMENTO_ID
			AND DD.CLIENTE_ID=@CLIENTE
			AND DD.PRODUCTO_ID=@PRODUCTO
			AND RL.NAVE_ACTUAL='1'
			AND RL.CAT_LOG_ID='TRAN_ING'
	ORDER BY
			1;
	IF @CONTENEDORA='1'	BEGIN
	--OBTENGO LA CANTIDAD A UBICAR DEL PRODUCTO.
	SELECT	@QTY=SUM(RL.CANTIDAD)
	FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
			ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
			INNER JOIN RL_DET_DOC_TRANS_POSICION RL
			ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
	WHERE	DD.DOCUMENTO_ID=@DOCUMENTO_ID
			AND DD.PRODUCTO_ID=@PRODUCTO
			AND DD.NRO_LINEA=@LINEA
			AND RL.NAVE_ACTUAL='1'
			AND RL.CAT_LOG_ID='TRAN_ING'
	END
	ELSE BEGIN
		SELECT	@QTY=SUM(RL.CANTIDAD)
		FROM	DET_DOCUMENTO DD INNER JOIN DET_DOCUMENTO_TRANSACCION DDT
				ON(DD.DOCUMENTO_ID=DDT.DOCUMENTO_ID AND DD.NRO_LINEA=DDT.NRO_LINEA_DOC)
				INNER JOIN RL_DET_DOC_TRANS_POSICION RL
				ON(DDT.DOC_TRANS_ID=RL.DOC_TRANS_ID AND DDT.NRO_LINEA_TRANS=RL.NRO_LINEA_TRANS)
		WHERE	DD.DOCUMENTO_ID=@DOCUMENTO_ID
				AND DD.PRODUCTO_ID=@PRODUCTO
				AND RL.NAVE_ACTUAL='1'
				AND RL.CAT_LOG_ID='TRAN_ING'	
	END	
	IF (@QTY IS NULL) OR (@QTY=0)
	BEGIN
		RAISERROR('No hay pendientes de ubicacion para el producto seleccionado.',16,1)
		return
	END
END--FIN PROCEDURE.

GO


