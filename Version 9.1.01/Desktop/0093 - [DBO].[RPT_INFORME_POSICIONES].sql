/****** Object:  StoredProcedure [dbo].[RPT_INFORME_POSICIONES]    Script Date: 10/22/2013 14:31:48 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RPT_INFORME_POSICIONES]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[RPT_INFORME_POSICIONES]
GO

CREATE PROCEDURE [dbo].[RPT_INFORME_POSICIONES]	
			@NAVE_ID		VARCHAR(15)OUTPUT
AS
BEGIN
	
	
SELECT	Q3.NAVE_COD as NAVE_COD,
		SUM(POSICIONES_LIBRES)AS POSICIONES_LIBRES,
		SUM(VOLUMEN_POSICIONES_LIBRES)AS VOLUMEN_POSICIONES_LIBRES,
		SUM(POSICIONES_OCUPADAS)AS POSICIONES_OCUPADAS,
		SUM(VOLUMEN_POSICIONES_OCUPADAS)AS VOLUMEN_POSICIONES_OCUPADAS
FROM	(
	-- CANTIDAD POSICIONES LIBRES 
	SELECT  NAVE as NAVE_COD,
			ISNULL (SUM(POS_LIBRES),0) AS POSICIONES_LIBRES, 
			ISNULL (SUM(VOL_01),0) AS VOLUMEN_POSICIONES_LIBRES,
			0 AS POSICIONES_OCUPADAS,
			0 AS VOLUMEN_POSICIONES_OCUPADAS
	FROM	(
			SELECT	N.NAVE_COD AS NAVE, COUNT(P.POSICION_ID) AS POS_LIBRES, SUM (ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000  AS VOL_01
			FROM	POSICION P 
					INNER JOIN NAVE N ON (N.NAVE_ID = P.NAVE_ID)				
			WHERE	POSICION_ID NOT IN (
					SELECT  RL.POSICION_ACTUAL				
					FROM RL_DET_DOC_TRANS_POSICION RL
					INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (RL.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND RL.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
					INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
					INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)				
					WHERE	RL.POSICION_ACTUAL IS NOT NULL				
					GROUP BY RL.POSICION_ACTUAL) 	
					AND ((@NAVE_ID IS NULL)OR(P.NAVE_ID=@NAVE_ID))								
			GROUP BY N.NAVE_COD, P.POSICION_ID	
			) AS Q
	GROUP BY Q.NAVE, Q.POS_LIBRES	
	UNION ALL
	-- SUMA POSICIONES OCUPADAS
	SELECT	Q1.NAVE AS NAVE_COD,
			0 AS POSICIONES_LIBRES,
			0 AS VOLUMEN_POSICIONES_LIBRES,
			ISNULL(SUM (1),0) AS POSICIONES_OCUPADAS,
			ISNULL (SUM (VOL_01),0) AS VOLUMEN_POSICIONES_OCUPADAS
	FROM	(
			SELECT	N.NAVE_COD AS NAVE, RL.POSICION_ACTUAL, SUM (ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000 AS VOL_01
			FROM RL_DET_DOC_TRANS_POSICION RL
				INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (RL.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND RL.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
				INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
				INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)
				INNER JOIN PRODUCTO P ON (P.PRODUCTO_ID = DD.PRODUCTO_ID AND P.CLIENTE_ID = DD.CLIENTE_ID)
				INNER JOIN CLIENTE C ON (DD.CLIENTE_ID = C.CLIENTE_ID)
				INNER JOIN POSICION POS ON (RL.POSICION_ACTUAL = POS.POSICION_ID)
				INNER JOIN NAVE N ON (POS.NAVE_ID = N.NAVE_ID)
			WHERE RL.POSICION_ACTUAL IS NOT NULL	
				AND ((@NAVE_ID IS NULL)OR(POS.NAVE_ID=@NAVE_ID))				
			GROUP BY N.NAVE_COD, RL.POSICION_ACTUAL		
			) Q1
		GROUP BY Q1.NAVE
	UNION ALL		
	-- SUMA NAVES OCUPADAS SIN LAYOUT	
	SELECT	Q2.NAVE AS NAVE_COD,
			0 AS POSICIONES_LIBRES,
			0 AS VOLUMEN_POSICIONES_LIBRES,
			ISNULL(SUM (0),0) AS POSICIONES_OCUPADAS,
			ISNULL (SUM (VOL_01),0) AS VOLUMEN_POSICIONES_OCUPADAS
	FROM	(
			SELECT	N.NAVE_COD AS NAVE, RL.NAVE_ACTUAL, SUM (ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000 AS VOL_01
			FROM RL_DET_DOC_TRANS_POSICION RL
				INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (RL.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND RL.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
				INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
				INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)
				INNER JOIN PRODUCTO P ON (P.PRODUCTO_ID = DD.PRODUCTO_ID AND P.CLIENTE_ID = DD.CLIENTE_ID)
				INNER JOIN CLIENTE C ON (DD.CLIENTE_ID = C.CLIENTE_ID)
				INNER JOIN NAVE N ON (RL.NAVE_ACTUAL = N.NAVE_ID)
			WHERE N.NAVE_TIENE_LAYOUT = 0 AND RL.NAVE_ACTUAL IS NOT NULL AND N.NAVE_ID NOT IN ('1','2')
				AND ((@NAVE_ID IS NULL)OR(N.NAVE_ID=@NAVE_ID))				
			GROUP BY N.NAVE_COD, NAVE_ACTUAL		
			) Q2
		GROUP BY Q2.NAVE						
) Q3
GROUP BY Q3.NAVE_COD
ORDER BY Q3.NAVE_COD
	
END;




GO


