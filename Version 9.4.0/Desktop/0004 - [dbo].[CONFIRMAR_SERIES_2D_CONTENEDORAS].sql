/****** Object:  StoredProcedure [dbo].[CONFIRMAR_SERIES_2D_CONTENEDORAS]    Script Date: 11/18/2014 09:35:49 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CONFIRMAR_SERIES_2D_CONTENEDORAS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[CONFIRMAR_SERIES_2D_CONTENEDORAS]
GO

CREATE PROCEDURE [dbo].[CONFIRMAR_SERIES_2D_CONTENEDORAS]
	@CLIENTE_ID		VARCHAR(100),
	@VIAJE_ID		VARCHAR(100),
	@PRODUCTO_ID	VARCHAR(50),
	@CONTENEDORA	VARCHAR(50),
	@SERIE_DESDE	NUMERIC(20,0),
	@SERIE_HASTA	NUMERIC(20,0),
	@CANT_SERIES	NUMERIC(20,0),
	@USUARIO		VARCHAR(100),
	@CONFIRMO		VARCHAR(1)OUT
AS
BEGIN
	SET XACT_ABORT ON;
	
	DECLARE @CANT_SERIES_CONTENEDORA	NUMERIC(20,0),
			@SERIE_CONFORMADA			NUMERIC(20,0),
			@SERIE_INICIO				NUMERIC(20,0),
			@F_INICIO					DATETIME,
			@PALLET_PICKING				VARCHAR(100),
			@CANT_REG_TOTAL				NUMERIC(20,0),
			@CANT_REG_CONF				NUMERIC(20,0),
			@CONTROL_SERIE				NUMERIC(20,0),
			@MSG						VARCHAR(100)
			
	SET @CONFIRMO='0';

	SELECT	@CANT_SERIES_CONTENEDORA=SUM(P.CANTIDAD)
	FROM	PICKING P INNER JOIN DET_DOCUMENTO DD
			ON(P.DOCUMENTO_ID=DD.DOCUMENTO_ID AND P.NRO_LINEA=DD.NRO_LINEA)
	WHERE	P.CLIENTE_ID=@CLIENTE_ID
			AND P.VIAJE_ID=@VIAJE_ID
			AND P.PRODUCTO_ID=@PRODUCTO_ID
			AND DD.NRO_BULTO=@CONTENEDORA

	IF @CANT_SERIES_CONTENEDORA=@CANT_SERIES
	BEGIN
	
		--MANDO A SPLITEAR LAS LINEAS. NO QUIERO LIOS CON ESTE TEMA.
		EXEC DBO.SPLIT_CONTENEDORA_PICKING @CLIENTE_ID, @VIAJE_ID, @CONTENEDORA;
		
		SELECT	@F_INICIO=P.FECHA_INICIO, @PALLET_PICKING=PALLET_PICKING
		FROM	PICKING P INNER JOIN DET_DOCUMENTO DD
				ON(P.DOCUMENTO_ID=DD.DOCUMENTO_ID AND P.NRO_LINEA=DD.NRO_LINEA)
		WHERE	P.CLIENTE_ID=@CLIENTE_ID
				AND P.VIAJE_ID=@VIAJE_ID
				AND P.PRODUCTO_ID=@PRODUCTO_ID
				AND DD.NRO_BULTO=@CONTENEDORA
				AND P.USUARIO=@USUARIO
				AND P.FECHA_INICIO IS NOT NULL
				
		SET @SERIE_INICIO=@SERIE_DESDE;
		
		-----------------------------------------------------------------------------------------------
		--LA CANTIDAD DE SERIES DE LA ETIQUETA CORRESPONDE CON LA CANTIDAD DE SERIES DE LA CONTENEDORA.
		--COMIENZO A CONFIRMAR TODO EL PAQUETE DE SERIES.
		-----------------------------------------------------------------------------------------------
		WHILE (@SERIE_INICIO<=@SERIE_HASTA)
		BEGIN
			
			SET @SERIE_CONFORMADA=@SERIE_INICIO;
			SET @CONTROL_SERIE=0;
			
			--CONTROLO QUE LA SERIE NO SE ENCUENTRE EN PROCESO DE EGRESO.
			SELECT	@CONTROL_SERIE=COUNT(*)
			FROM	PICKING P INNER JOIN DET_DOCUMENTO DD
					ON(P.DOCUMENTO_ID=DD.DOCUMENTO_ID AND P.NRO_LINEA=DD.NRO_LINEA)
					INNER JOIN DOCUMENTO D
					ON(DD.DOCUMENTO_ID=D.DOCUMENTO_ID)
			WHERE	P.CLIENTE_ID=@CLIENTE_ID
					AND P.PRODUCTO_ID=@PRODUCTO_ID
					AND P.NRO_SERIE=CAST(@SERIE_CONFORMADA AS VARCHAR)
					AND D.STATUS <>'D40';
					
			IF @CONTROL_SERIE>0
			BEGIN
				SET @MSG=CAST(@SERIE_CONFORMADA AS VARCHAR)
				RAISERROR('La serie %s se encuentra en proceso de egreso, no es posible volver a egresarla.',16,1,@MSG);
				RETURN	
			END		
									
			UPDATE	PICKING 
			SET		FECHA_INICIO=@F_INICIO, 
					FECHA_FIN=GETDATE(),
					USUARIO=@USUARIO,
					PALLET_PICKING=@PALLET_PICKING,
					NRO_SERIE=@SERIE_CONFORMADA,
					CANT_CONFIRMADA=CANTIDAD
			WHERE	PICKING_ID IN(	SELECT	TOP 1 PICKING_ID
									FROM	PICKING P INNER JOIN DET_DOCUMENTO DD
											ON(P.DOCUMENTO_ID=DD.DOCUMENTO_ID AND P.NRO_LINEA=DD.NRO_LINEA)
									WHERE	P.CLIENTE_ID=@CLIENTE_ID
											AND P.VIAJE_ID=@VIAJE_ID
											AND P.PRODUCTO_ID=@PRODUCTO_ID
											AND DD.NRO_BULTO=@CONTENEDORA
											AND P.NRO_SERIE IS NULL)
			
			SET @SERIE_INICIO = @SERIE_INICIO+1
														
			IF @@ROWCOUNT>0 BEGIN
				SET @CONFIRMO='1'											
			END		
		END
		
		SELECT	@CANT_REG_TOTAL=COUNT(PICKING_ID)
		FROM	PICKING
		WHERE	VIAJE_ID=@VIAJE_ID
		
		SELECT	@CANT_REG_CONF=COUNT(PICKING_ID)
		FROM	PICKING
		WHERE	VIAJE_ID=@VIAJE_ID
				AND CANT_CONFIRMADA IS NOT NULL
				AND USUARIO IS NOT NULL
				AND FECHA_FIN IS NOT NULL
				
		IF	@CANT_REG_TOTAL=@CANT_REG_CONF
		BEGIN
			UPDATE	PICKING SET FIN_PICKING='2'
			WHERE	VIAJE_ID=@VIAJE_ID
		END
	END
	ELSE
	BEGIN
		RAISERROR('La cantidad solicitada no es la misma que posee la contenedora.',16,1)
		RETURN
	END
END
GO


