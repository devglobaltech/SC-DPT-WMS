
/****** Object:  StoredProcedure [dbo].[RPT_OCUP_DEP]    Script Date: 11/04/2013 16:28:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RPT_OCUP_DEP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[RPT_OCUP_DEP]
GO

/****** Object:  StoredProcedure [dbo].[RPT_OCUP_DEP]    Script Date: 11/04/2013 16:28:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [DBO].[RPT_OCUP_DEP]
	@FDESDE			VARCHAR(8)		OUTPUT,	--ANSI
	@FHASTA			VARCHAR(8)		OUTPUT,	--ANSI
	@CLIENTE_ID		VARCHAR(15)		OUTPUT,
	@NAVE_ID		VARCHAR(15)		OUTPUT	
AS
BEGIN


SELECT		Q.FECHA						AS FECHA, 
			Q.RAZON_SOCIAL				AS RAZON_SOCIAL, 
			Q.NAVE_COD					AS NAVE_COD,
			SUM(Q.CANT_POS_LIBRES)	AS CANT_POS_LIBRES,
			SUM(Q.VOL_LIBRE)			AS VOL_LIBRE,
			SUM(Q.POSICION)			AS CANT_POS_OCUP,			
			SUM(Q.VOL_OCUPADO)			AS VOL_OCUPADO,
			GETDATE()					AS F_IMP,
			HOST_NAME()					AS TERMINAL				
FROM
	(	

	SELECT	DBO.TRUNC(TEMP.FECHA_SNAP)	AS FECHA,			
			C.RAZON_SOCIAL				AS RAZON_SOCIAL,
			N.NAVE_COD					AS NAVE_COD,			
			TEMP.POSICIONES_LIBRES		AS CANT_POS_LIBRES,
			TEMP.VOLUMEN_LIBRE			AS VOL_LIBRE,
			0							AS POSICION,			
			0							AS VOL_OCUPADO
	FROM	TEMP_RPT_OCUP_DEP TEMP
			INNER JOIN CLIENTE C ON (TEMP.CLIENTE_ID = C.CLIENTE_ID)
			INNER JOIN NAVE N ON (TEMP.NAVE_ID = N.NAVE_ID)	
			
	UNION ALL			
	
	-- POSICIONES OCUPADAS		
	SELECT	W.FECHA						AS FECHA, 
			W.RAZON_SOCIAL				AS RAZON_SOCIAL,
			W.NAVE_COD					AS NAVE_COD, 
			0							AS CANT_POS_LIBRES,
			0							AS VOL_LIBRE,			
			COUNT(W.POSICION_ACTUAL)	AS POSICION, 
			SUM(W.VOL_OCUPADO)			AS VOL_OCUPADO
	FROM
	(
		SELECT	DISTINCT DBO.TRUNC(SE.F_SNAP)	AS FECHA, 
				C.RAZON_SOCIAL					AS RAZON_SOCIAL,
				N.NAVE_COD						AS NAVE_COD,
				SE.POSICION_ACTUAL				AS POSICION_ACTUAL,
				SUM(ISNULL(SE.CANTIDAD,0)* ((ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000)) AS VOL_OCUPADO		
		FROM	SNAP_EXISTENCIAS SE		
				INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (SE.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND SE.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
				INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
				INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)
				INNER JOIN PRODUCTO P ON (DD.PRODUCTO_ID = P.PRODUCTO_ID AND DD.CLIENTE_ID = P.CLIENTE_ID)	
				INNER JOIN POSICION POS ON (SE.POSICION_ACTUAL = POS.POSICION_ID)
				INNER JOIN NAVE N ON (POS.NAVE_ID = N.NAVE_ID)	
				INNER JOIN CLIENTE C ON (SE.CLIENTE_ID = C.CLIENTE_ID)		
		WHERE	DISPONIBLE = '1'
				AND POSICION_ACTUAL IS NOT NULL AND NAVE_ACTUAL IS NULL		
				AND ((@CLIENTE_ID IS NULL)OR(DD.CLIENTE_ID=@CLIENTE_ID))
				AND ((@NAVE_ID IS NULL)OR(POS.NAVE_ID=@NAVE_ID))
				AND ((@FDESDE IS NULL)OR (DBO.TRUNC(SE.F_SNAP) BETWEEN @FDESDE AND @FHASTA))			
		GROUP BY 	SE.F_SNAP, C.RAZON_SOCIAL,N.NAVE_COD,SE.POSICION_ACTUAL		
		) W
	GROUP BY  W.FECHA, W.RAZON_SOCIAL, W.NAVE_COD
	
	UNION ALL
		
	-- NAVES CON LAYOUT OCUPADAS
	SELECT	W.FECHA						AS FECHA, 
			W.RAZON_SOCIAL				AS RAZON_SOCIAL,
			W.NAVE_COD 					AS NAVE_COD, 
			0							AS CANT_POS_LIBRES,
			0							AS VOL_LIBRE,			
			COUNT(W.POSICION_ACTUAL)	AS CANTIDAD, 
			SUM(W.VOL_OCUPADO)			AS VOL_OCUPADO
	FROM
	(		
	SELECT	DISTINCT DBO.TRUNC(SE.F_SNAP)	AS FECHA, 
			C.RAZON_SOCIAL					AS RAZON_SOCIAL,
			N.NAVE_COD						AS NAVE_COD,			
			SE.NAVE_ACTUAL					AS POSICION_ACTUAL, 		
			SUM(ISNULL(SE.CANTIDAD,0)* ((ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000))	AS VOL_OCUPADO
	FROM	SNAP_EXISTENCIAS SE		
			INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (SE.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND SE.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
			INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
			INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)				
			INNER JOIN PRODUCTO P ON (DD.PRODUCTO_ID = P.PRODUCTO_ID AND DD.CLIENTE_ID = P.CLIENTE_ID)				
			INNER JOIN NAVE N ON (SE.NAVE_ACTUAL = N.NAVE_ID)	
			INNER JOIN CLIENTE C ON (SE.CLIENTE_ID = C.CLIENTE_ID)	
	WHERE	DISPONIBLE = '1'
			AND N.NAVE_TIENE_LAYOUT = 1
			AND NAVE_ACTUAL IS NOT NULL AND POSICION_ACTUAL IS NULL 	
			AND ((@CLIENTE_ID IS NULL)OR(DD.CLIENTE_ID=@CLIENTE_ID))
			AND ((@NAVE_ID IS NULL)OR(SE.NAVE_ACTUAL=@NAVE_ID))
			AND ((@FDESDE IS NULL)OR (DBO.TRUNC(SE.F_SNAP) BETWEEN @FDESDE AND @FHASTA))
							
	GROUP BY 	SE.F_SNAP, C.RAZON_SOCIAL,N.NAVE_COD,SE.NAVE_ACTUAL		
	) W
	GROUP BY  W.FECHA, W.RAZON_SOCIAL, W.NAVE_COD			

	UNION ALL
	
	-- NAVES SIN LAYOUT OCUPADAS
	SELECT	W.FECHA						AS FECHA, 
			W.RAZON_SOCIAL				AS RAZON_SOCIAL,
			W.NAVE_COD + ' (SIN LAYOUT)'	AS NAVE_COD, 
			0							AS CANT_POS_LIBRES,
			0							AS VOL_LIBRE,			
			0							AS CANTIDAD, -- X DEFINICION NO SE CUENTAN
			SUM(W.VOL_OCUPADO)			AS VOL_OCUPADO
	FROM
	(	
	SELECT	DBO.TRUNC(SE.F_SNAP)			AS FECHA, 
			C.RAZON_SOCIAL					AS RAZON_SOCIAL,
			N.NAVE_COD 						AS NAVE_COD,
			0								AS CANT_POS_LIBRES,
			0								AS VOL_LIBRE,			
			SE.NAVE_ACTUAL					AS POSICION_ACTUAL, 		
			SUM(ISNULL(SE.CANTIDAD,0)* ((ISNULL(P.LARGO,0) * ISNULL(P.ALTO,0) * ISNULL(P.ANCHO,0))/1000000))	AS VOL_OCUPADO
	FROM	SNAP_EXISTENCIAS SE		
			INNER JOIN DET_DOCUMENTO_TRANSACCION DDT ON (SE.DOC_TRANS_ID = DDT.DOC_TRANS_ID AND SE.NRO_LINEA_TRANS = DDT.NRO_LINEA_TRANS)
			INNER JOIN DET_DOCUMENTO DD ON (DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA)
			INNER JOIN DOCUMENTO D ON (DD.DOCUMENTO_ID = D.DOCUMENTO_ID)				
			INNER JOIN PRODUCTO P ON (DD.PRODUCTO_ID = P.PRODUCTO_ID AND DD.CLIENTE_ID = P.CLIENTE_ID)			
			INNER JOIN NAVE N ON (SE.NAVE_ACTUAL = N.NAVE_ID)
			INNER JOIN CLIENTE C ON (SE.CLIENTE_ID = C.CLIENTE_ID)		
	WHERE	DISPONIBLE = '1'
			AND N.NAVE_TIENE_LAYOUT = 0
			AND NAVE_ACTUAL NOT IN (1,2)
			AND NAVE_ACTUAL IS NOT NULL AND POSICION_ACTUAL IS NULL
			AND ((@CLIENTE_ID IS NULL)OR(DD.CLIENTE_ID=@CLIENTE_ID))
			AND ((@NAVE_ID IS NULL)OR(N.NAVE_ID=@NAVE_ID))
			AND ((@FDESDE IS NULL)OR (DBO.TRUNC(SE.F_SNAP) BETWEEN @FDESDE AND @FHASTA))
			
	GROUP BY 	SE.F_SNAP, C.RAZON_SOCIAL,N.NAVE_COD,SE.NAVE_ACTUAL		
	) W
	GROUP BY  W.FECHA, W.RAZON_SOCIAL, W.NAVE_COD
) AS Q
GROUP BY	Q.FECHA, 
			Q.RAZON_SOCIAL, 
			Q.NAVE_COD




END;



GO


