/****** Object:  StoredProcedure [dbo].[MOB_DEVOLUCION_VALIDACION]    Script Date: 10/22/2015 17:14:31 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOB_DEVOLUCION_VALIDACION]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[MOB_DEVOLUCION_VALIDACION]
GO

--2.
CREATE PROCEDURE [dbo].[MOB_DEVOLUCION_VALIDACION]
	@CLIENTE_ID				VARCHAR(15),
	@PRODUCTO_ID			VARCHAR(15),
	@PALLET_DEVOLUCION		VARCHAR(100),
	@MOTIVO_ID				VARCHAR(100),
	@NRO_LOTE				VARCHAR(100),
	@NRO_PALLET				VARCHAR(100),
	@NRO_PARTIDA			VARCHAR(100),
	@NRO_SERIE				VARCHAR(100),
	@OBSERVACIONES			VARCHAR(200),
	@USUARIO				VARCHAR(100)
AS
BEGIN
	DECLARE @DOCUMENTO_ID_EGRESO		NUMERIC(20,0)
	DECLARE @NRO_LINEA_EGRESO			NUMERIC(10,0)
	DECLARE @DOCUMENTO_ID_DEVOLUCION	NUMERIC(20,0)
	DECLARE @NRO_LINEA_DEVOLUCION		NUMERIC(20,0)
	DECLARE @FECHA_CREACION				DATETIME
	DECLARE @ESTADO						VARCHAR(100)
	DECLARE @FECHA_ESTADO				DATETIME
	DECLARE @OBS_ESTADO					VARCHAR(200)
	DECLARE @CONTROL					NUMERIC(20,0)
	DECLARE @MAX_PICKING_ID				NUMERIC(20,0)
	DECLARE @MSG						VARCHAR(200)
	
	SET @FECHA_CREACION=GETDATE()
	SET @FECHA_ESTADO=GETDATE()
	SET @ESTADO='EN PROGRESO'
	
	SELECT	@MAX_PICKING_ID=MAX(PICKING_ID)
	FROM	VPICKING
	WHERE	CLIENTE_ID=@CLIENTE_ID
			AND PRODUCTO_ID=@PRODUCTO_ID
			AND	NRO_SERIE=@NRO_SERIE 
			
	IF @MAX_PICKING_ID IS NOT NULL BEGIN
		
		SELECT	@CONTROL=COUNT(*)
		FROM	PICKING P INNER JOIN DOCUMENTO D	ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
		WHERE	PICKING_ID=@MAX_PICKING_ID
				AND D.STATUS='D40'
	
		IF @CONTROL=0 BEGIN
			--RAISERROR('La serie %s correspondiente al producto %s, se encuentra en un pedido no finalizado.',16,1,@NRO_SERIE,@PRODUCTO_ID)
			SET @MSG='La serie ' + @NRO_SERIE + ' correspondiente al producto ' + @PRODUCTO_ID + ', se encuentra en un pedido no finalizado'
			RAISERROR(@MSG,16,1)
			RETURN					
		END
		
		IF @MAX_PICKING_ID IS NOT NULL BEGIN
			
			SELECT	DISTINCT @CONTROL=COUNT(*)
			FROM	MOB_DEVOLUCIONES_TMP M INNER JOIN PICKING P
					ON(M.DOCUMENTO_ID_EGRESO=P.DOCUMENTO_ID AND M.NRO_LINEA_EGRESO=P.NRO_LINEA)
			WHERE	P.PICKING_ID=@MAX_PICKING_ID
					AND M.ESTADO='FINALIZADO'
					AND M.CLIENTE_ID=@CLIENTE_ID
					AND M.PRODUCTO_ID=@PRODUCTO_ID
					AND M.NRO_SERIE=@NRO_SERIE		
					
			IF @CONTROL>0 BEGIN
			
				SET @MSG='La serie ' + @NRO_SERIE + ' correspondiente al producto ' + @PRODUCTO_ID + ', ya ha sido devuelta.'
				RAISERROR(@MSG,16,1)
				RETURN					
			
			END					
		END
		
		SET @CONTROL=NULL
		
		SELECT	@CONTROL=COUNT(*)
		FROM	MOB_DEVOLUCIONES_TMP 
		WHERE	CLIENTE_ID=@CLIENTE_ID
				AND PRODUCTO_ID=@PRODUCTO_ID
				AND NRO_SERIE=@NRO_SERIE
				AND PALLET_DEVOLUCION=@PALLET_DEVOLUCION 
				
		IF @CONTROL>0 BEGIN
			--RAISERROR('La serie %s correspondiente al producto %s, se encuentra en un pedido no finalizado.',16,1,@NRO_SERIE,@PRODUCTO_ID)
			SET @MSG='La serie ' + @NRO_SERIE + ' correspondiente al producto ' + @PRODUCTO_ID + ', ya se encuentra leida en el pallet.'
			RAISERROR(@MSG,16,1)
			RETURN			
		END
		
		SET @CONTROL=NULL
		
	END ELSE BEGIN
		SET @MSG='La serie ' + @NRO_SERIE + ' correspondiente al producto ' + @PRODUCTO_ID +', no fue egresada.'
		RAISERROR(@MSG,16,1)
		RETURN			
	END
END	--FIN PROCEDURE.
GO


