IF  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[MOB_CERRAR_TMP_PRODUCTO_EMPAQUE]') AND TYPE IN (N'P', N'PC'))
DROP PROCEDURE [DBO].[MOB_CERRAR_TMP_PRODUCTO_EMPAQUE]

GO


CREATE PROCEDURE [DBO].[MOB_CERRAR_TMP_PRODUCTO_EMPAQUE]
	@CLIENTE_ID         AS VARCHAR(15) OUTPUT,
	@PEDIDO_ID          AS VARCHAR(100) OUTPUT,
    @NRO_CONTENEDORA    AS NUMERIC(20) OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
    SET XACT_ABORT ON;

	DECLARE @GUIA			AS VARCHAR(100),
			@CONTROL		AS NUMERIC,
			@DOCUMENTO		AS NUMERIC,
			@CONTROLASIG	AS NUMERIC,
			@CONTROLADOR	AS NUMERIC,
			@UC_EMPAQUE		AS NUMERIC;
			
	SELECT	@DOCUMENTO=DOCUMENTO_ID
	FROM	DOCUMENTO
	WHERE	NRO_REMITO=@PEDIDO_ID
			AND CLIENTE_ID=@CLIENTE_ID
			AND TIPO_OPERACION_ID = 'EGR';
			
	DELETE PICKING WHERE DOCUMENTO_ID = @DOCUMENTO
			AND PRODUCTO_ID IN (
			SELECT DISTINCT PRODUCTO_ID FROM TMP_EMPAQUE_CONTENEDORA
			WHERE DOCUMENTO_ID = @DOCUMENTO);
	
	INSERT INTO PICKING
	SELECT	DOCUMENTO_ID,NRO_LINEA,CLIENTE_ID,PRODUCTO_ID,VIAJE_ID,TIPO_CAJA,DESCRIPCION,CANTIDAD,NAVE_COD,POSICION_COD,
			RUTA,PROP1,FECHA_INICIO,FECHA_FIN,USUARIO,CANT_CONFIRMADA,PALLET_PICKING,SALTO_PICKING,PALLET_CONTROLADO,
			USUARIO_CONTROL_PICK,ST_ETIQUETAS,ST_CAMION,FACTURADO,FIN_PICKING,ST_CONTROL_EXP,FECHA_CONTROL_PALLET,
			TERMINAL_CONTROL_PALLET,FECHA_CONTROL_EXP,USUARIO_CONTROL_EXP,TERMINAL_CONTROL_EXP,FECHA_CONTROL_FAC,
			USUARIO_CONTROL_FAC,TERMINAL_CONTROL_FAC,VEHICULO_ID,PALLET_COMPLETO,HIJO,QTY_CONTROLADO,PALLET_FINAL,
			PALLET_CERRADO,USUARIO_PF,TERMINAL_PF,REMITO_IMPRESO,NRO_REMITO_PF,PICKING_ID_REF,BULTOS_CONTROLADOS,
			BULTOS_NO_CONTROLADOS,FLG_PALLET_HOMBRE,TRANSF_TERMINADA,NRO_LOTE,NRO_PARTIDA,NRO_SERIE,ESTADO,
			NRO_UCDESCONSOLIDACION,FECHA_DESCONSOLIDACION,USUARIO_DESCONSOLIDACION,TERMINAL_DESCONSOLIDACION,
			NRO_UCEMPAQUETADO,UCEMPAQUETADO_MEDIDAS,FECHA_UCEMPAQUETADO,UCEMPAQUETADO_PESO
    FROM TMP_EMPAQUE_CONTENEDORA WHERE DOCUMENTO_ID = @DOCUMENTO
    
    --1. ACA COMPLETO LA UNIDAD CONTENEDORA EN EL CAMPO NRO_CONTENEDORA.
    UPDATE	PICKING SET NRO_UCEMPAQUETADO=PALLET_PICKING
    FROM	PICKING P INNER JOIN DOCUMENTO D ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
    WHERE	D.CLIENTE_ID=@CLIENTE_ID
			AND D.NRO_REMITO=@PEDIDO_ID
			AND PICKING_ID IN
	(SELECT		PICKING_ID 
	--FROM		TMP_EMPAQUE_CONTENEDORA
	--ESTABA MAL QUE LO SAQUE DE TMP_EMPAQUE_CONTENEDORA PORQUE TRAIA LOS PICKING ID ANTERIORES
	FROM		PICKING P INNER JOIN DOCUMENTO D ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
	WHERE		D.CLIENTE_ID = @CLIENTE_ID 
				AND D.NRO_REMITO = @PEDIDO_ID
				AND P.PALLET_PICKING = @NRO_CONTENEDORA);
    --2. ADEMAS HAGO QUE SE CREE LA UC CONTENEDORA.
    INSERT INTO UC_EMPAQUE (UC_EMPAQUE,ALTO,ANCHO,LARGO,VOLUMEN)
    SELECT	DISTINCT
			P.NRO_UCEMPAQUETADO,0,0,0,0
    FROM	PICKING P INNER JOIN DOCUMENTO D ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
    WHERE	PICKING_ID IN
    (SELECT PICKING_ID 
    --LO MISMO PARA ESTE CASO
	--FROM TMP_EMPAQUE_CONTENEDORA 
	FROM PICKING P INNER JOIN DOCUMENTO D ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
		WHERE D.CLIENTE_ID = @CLIENTE_ID 
		AND D.NRO_REMITO = @PEDIDO_ID
		AND P.PALLET_PICKING = @NRO_CONTENEDORA)
		AND NOT EXISTS (SELECT	1 
							FROM	UC_EMPAQUE U2
							WHERE	P.NRO_UCEMPAQUETADO=U2.UC_EMPAQUE);
				
    --3. SI TIENE EXPEDICION OBLIGATORIA GENERO LA GUIA.
	SELECT	@CONTROL=COUNT(P.PICKING_ID)
	FROM	PICKING P INNER JOIN DOCUMENTO D ON(P.DOCUMENTO_ID=D.DOCUMENTO_ID)
	WHERE	D.CLIENTE_ID=@CLIENTE_ID
			AND D.NRO_REMITO=@PEDIDO_ID
			AND P.NRO_UCEMPAQUETADO IS NULL
			
	IF @CONTROL=0 BEGIN	    
		EXEC [DBO].[GENERAR_GUIA] @PEDIDO_ID, @GUIA OUTPUT
	END

	SELECT	@CONTROLASIG=COUNT(*)
	FROM	(	SELECT	D.NRO_REMITO AS VIAJE_ID,DD.DOCUMENTO_ID, DD.NRO_LINEA, DD.PRODUCTO_ID, SUM(DD.CANTIDAD) QTY
				FROM	DET_DOCUMENTO DD INNER JOIN DOCUMENTO D
						ON(D.DOCUMENTO_ID=DD.DOCUMENTO_ID)
				WHERE	D.CLIENTE_ID=@CLIENTE_ID
						AND D.NRO_REMITO=@PEDIDO_ID
				GROUP BY
						D.NRO_REMITO,DD.DOCUMENTO_ID, DD.NRO_LINEA, DD.PRODUCTO_ID)X
			INNER JOIN(
				SELECT	DD.VIAJE_ID,DD.DOCUMENTO_ID, DD.NRO_LINEA, DD.PRODUCTO_ID, SUM(DD.CANTIDAD) QTY
				FROM	PICKING DD INNER JOIN DOCUMENTO D
						ON(DD.DOCUMENTO_ID=D.DOCUMENTO_ID)
				WHERE	D.CLIENTE_ID=@CLIENTE_ID
						AND D.NRO_REMITO=@PEDIDO_ID
				GROUP BY
						DD.VIAJE_ID,DD.DOCUMENTO_ID, DD.NRO_LINEA, DD.PRODUCTO_ID)Y
			ON(X.DOCUMENTO_ID=Y.DOCUMENTO_ID AND X.NRO_LINEA=Y.NRO_LINEA)
	WHERE	1=1
			AND X.QTY<Y.QTY
			AND X.QTY>0
	
	IF @CONTROLASIG>0 BEGIN
		RAISERROR('SE PRODUJO UNA DIFERENCIA ENTRE LA ASIGNACION Y LOS REGISTROS ACTUALES.',16,1)
		RETURN
	END

    DELETE TMP_EMPAQUE_CONTENEDORA WHERE CLIENTE_ID = @CLIENTE_ID AND NRO_REMITO = @PEDIDO_ID

	UPDATE MOB_EMPAQUE_EN_PROGRESO SET ESTADO='CERRADO' WHERE CONTENEDOR=@NRO_CONTENEDORA

	UPDATE	MOB_EMPAQUE_UC_EMPAQUE 
	SET		ESTADO='CERRADO' 
	WHERE	UC_EMPAQUE=@NRO_CONTENEDORA 
			AND DOCUMENTO_ID IN(SELECT	DISTINCT D.DOCUMENTO_ID
								FROM	PICKING DD INNER JOIN DOCUMENTO D	ON(DD.DOCUMENTO_ID=D.DOCUMENTO_ID)
								WHERE	D.CLIENTE_ID=@CLIENTE_ID
										AND D.NRO_REMITO=@PEDIDO_ID)
	
	--------------------------------------------------------------------------------------
	--SI QUEDA MATERIAL POR EMPAQUETAR GENERO DE FORMA AUTOMATICA UNA NUEVA CONTENEDORA.
	--------------------------------------------------------------------------------------
	SELECT	@CONTROLADOR=COUNT(*)
	FROM	PICKING P
	WHERE	EXISTS(	SELECT	1
					FROM	DOCUMENTO D
					WHERE	P.DOCUMENTO_ID=D.DOCUMENTO_ID 
							AND D.NRO_REMITO=@PEDIDO_ID)
			AND ISNULL(P.PALLET_CONTROLADO,'0')='0'
			AND P.CLIENTE_ID=@CLIENTE_ID
	
	IF @CONTROLADOR >0	BEGIN
		
		EXEC dbo.GET_VALUE_FOR_SEQUENCE 'PALLET_PICKING',@UC_EMPAQUE OUTPUT
		
		INSERT INTO MOB_EMPAQUE_UC_EMPAQUE 
		SELECT	DISTINCT D.DOCUMENTO_ID,@UC_EMPAQUE,'ABIERTO',GETDATE()
		FROM	DOCUMENTO D
		WHERE	D.NRO_REMITO=@PEDIDO_ID

	END
END

