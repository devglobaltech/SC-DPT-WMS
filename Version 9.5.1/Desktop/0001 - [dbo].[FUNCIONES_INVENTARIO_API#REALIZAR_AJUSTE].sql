
/****** Object:  StoredProcedure [dbo].[FUNCIONES_INVENTARIO_API#REALIZAR_AJUSTE]    Script Date: 07/23/2015 11:24:01 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FUNCIONES_INVENTARIO_API#REALIZAR_AJUSTE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[FUNCIONES_INVENTARIO_API#REALIZAR_AJUSTE]
GO

CREATE PROCEDURE [dbo].[FUNCIONES_INVENTARIO_API#REALIZAR_AJUSTE]
	 @P_CLIENTE_ID		AS VARCHAR(15) 		OUTPUT
	,@P_PRODUCTO_ID		AS VARCHAR(30) 		OUTPUT
	,@P_FEC_VTO			AS VARCHAR(50) 		OUTPUT
	,@P_NRO_LOTE		AS VARCHAR(50)		OUTPUT
	,@P_NRO_PARTIDA		AS VARCHAR(50) 		OUTPUT
	,@P_NRO_DESPACHO	AS VARCHAR(50) 		OUTPUT
	,@P_NRO_BULTO		AS VARCHAR(50) 		OUTPUT
	,@P_NRO_SERIE		AS VARCHAR(50) 		OUTPUT
	,@P_NAVE			AS NUMERIC(20,0) 	OUTPUT
	,@P_POSICION		AS NUMERIC(20,0)	OUTPUT
	,@P_CAT_LOG_ID		AS VARCHAR(50)		OUTPUT
	,@P_EST_MERC_ID		AS VARCHAR(50)		OUTPUT
	,@P_PROP1			AS VARCHAR(100)		OUTPUT
	,@P_PROP2			AS VARCHAR(100) 	OUTPUT
	,@P_PROP3			AS VARCHAR(100)		OUTPUT
	,@PESO				AS NUMERIC(20,5)	OUTPUT
	,@VOLUMEN			AS NUMERIC(20,5)	OUTPUT
	,@UNIDAD_ID			AS VARCHAR(5)		OUTPUT
	,@UNIDAD_PESO		AS VARCHAR(5)		OUTPUT
	,@UNIDAD_VOLUMEN	AS VARCHAR(5) 		OUTPUT
	,@MONEDA_ID			AS VARCHAR(20)		OUTPUT
	,@COSTO				AS NUMERIC(10,3)	OUTPUT
	,@PVALOR			AS NUMERIC(20,5)	OUTPUT
	,@PSIGNO			AS VARCHAR(3)		OUTPUT
AS
BEGIN
	SET XACT_ABORT ON
	SET NOCOUNT ON

	-----------------------------------------------------------
	--DECLARACION DE VARIABLES.
	-----------------------------------------------------------
	DECLARE @P_RL				CURSOR
	DECLARE @RL_ID				NUMERIC(20,0)
	-----------------------------------------------------------
	DECLARE @SUMA_RL			FLOAT
	DECLARE @RESTANTE			NUMERIC(20,5)
	DECLARE @TERMINO			CHAR(1)
	DECLARE @CANT_TOTAL_UBIC	FLOAT
	DECLARE @TOTAL_A_DESCONTAR 	FLOAT
	DECLARE @VVALOR				NUMERIC(20,5)
	DECLARE @TEGR				FLOAT
	DECLARE @V_AUX				VARCHAR(100)
	-----------------------------------------------------------
	-----------------------------------------------------------
	IF @P_POSICION IS NOT NULL
	BEGIN
		SET @P_NAVE=NULL
	END
	ELSE
	BEGIN
		SET @P_POSICION=NULL
	END
	-----------------------------------------------------------------------------------------------------------	
	--Obtener la suma  de rl, para validar la cantidad.
	-----------------------------------------------------------------------------------------------------------	
	SELECT	@SUMA_RL=SUM(RL.CANTIDAD)
	FROM	RL_DET_DOC_TRANS_POSICION RL 
			LEFT OUTER JOIN POSICION P			ON(RL.POSICION_ACTUAL=P.POSICION_ID)	
			LEFT OUTER JOIN NAVE N				ON(RL.NAVE_ACTUAL=N.NAVE_ID)			
			LEFT OUTER JOIN NAVE N2				ON(P.NAVE_ID=N2.NAVE_ID),
			DET_DOCUMENTO DT, DET_DOCUMENTO_TRANSACCION DDT, CATEGORIA_LOGICA CL
	WHERE 	RL.DOC_TRANS_ID 					=DDT.DOC_TRANS_ID
			AND RL.NRO_LINEA_TRANS 				=DDT.NRO_LINEA_TRANS
			AND DDT.DOCUMENTO_ID 				=DT.DOCUMENTO_ID
			AND DDT.NRO_LINEA_DOC 				=DT.NRO_LINEA
			AND RL.DISPONIBLE					='1'
			AND CL.CLIENTE_ID					=RL.CLIENTE_ID
			AND CL.CAT_LOG_ID					=RL.CAT_LOG_ID
			AND ((@P_CAT_LOG_ID IS NULL) 		OR (RL.CAT_LOG_ID=@P_CAT_LOG_ID))
			AND ((@P_NRO_LOTE IS NULL) 			OR (DT.NRO_LOTE=@P_NRO_LOTE))
			AND ((@P_NRO_SERIE IS NULL) 		OR (DT.NRO_SERIE=@P_NRO_SERIE))
			AND ((@P_NRO_PARTIDA IS NULL) 		OR (DT.NRO_PARTIDA=@P_NRO_PARTIDA))
			AND ((@P_NRO_DESPACHO IS NULL) 		OR (DT.NRO_DESPACHO=@P_NRO_DESPACHO))
			AND ((@P_NRO_BULTO IS NULL) 		OR (DT.NRO_BULTO=@P_NRO_BULTO))
			-----------------------------------------------------------------------------------------------------------
			-------------------------------       SOLUCIONADO	------------------------------------------------------
			-----------------------------------------------------------------------------------------------------------
			AND ((@P_POSICION IS NULL) 			OR (RL.POSICION_ACTUAL=@P_POSICION))
			AND ((@P_NAVE IS NULL)				OR (RL.NAVE_ACTUAL=@P_NAVE))
			-----------------------------------------------------------------------------------------------------------
			AND ((@P_CLIENTE_ID IS NULL) 		OR (DT.CLIENTE_ID=@P_CLIENTE_ID))
			AND ((@P_PRODUCTO_ID IS NULL) 		OR (DT.PRODUCTO_ID=@P_PRODUCTO_ID))
			AND ((@P_EST_MERC_ID IS NULL) 		OR (RL.EST_MERC_ID=@P_EST_MERC_ID))
			AND ((@P_PROP1 IS NULL) 			OR (DT.PROP1=@P_PROP1))
			AND	 ((@P_PROP2 IS NULL) 			OR (DT.PROP2=@P_PROP2))
			AND ((@P_PROP3 IS NULL) 			OR (DT.PROP3=@P_PROP3))
			AND ((@PESO IS NULL) 				OR (DT.PESO=@PESO))
			AND ((@VOLUMEN IS NULL)				OR (DT.VOLUMEN=@VOLUMEN))
			AND ((@UNIDAD_ID IS NULL)			OR (DT.UNIDAD_ID=@UNIDAD_ID))
			AND ((@UNIDAD_PESO IS NULL)			OR (DT.UNIDAD_PESO=@UNIDAD_PESO))
			AND ((@UNIDAD_VOLUMEN IS NULL)		OR (DT.UNIDAD_VOLUMEN=@UNIDAD_VOLUMEN))
			AND ((@MONEDA_ID IS NULL)			OR (DT.MONEDA_ID=@MONEDA_ID))
			AND ((@COSTO IS NULL)				OR (DT.COSTO=@COSTO))
			AND ((RL.POSICION_ACTUAL IS NOT NULL AND P.POS_LOCKEADA='0') OR (RL.NAVE_ACTUAL IS NOT NULL)) 
			AND ((RL.POSICION_ACTUAL IS NOT NULL ) OR (RL.NAVE_ACTUAL IS NOT NULL))
			AND ((RL.NAVE_ACTUAL IS NOT NULL) 	OR (RL.POSICION_ACTUAL IS NOT NULL))
			AND  NOT   EXISTS (	SELECT 	POSICION_ID
								FROM  	RL_POSICION_PROHIBIDA_CLIENTE RLPPC
								WHERE 	RLPPC.POSICION_ID = RL.POSICION_ACTUAL
										AND    RLPPC.CLIENTE_ID  = DT.CLIENTE_ID)
	-----------------------------------------------------------------------------------------------------------		
	--Debo Obtener todos los transitos de egresos.
	-----------------------------------------------------------------------------------------------------------	
	SELECT 	@TEGR=ISNULL(X.CANTIDAD,0)
	FROM	(
			SELECT 	SUM(ISNULL(DD.CANTIDAD, 0)) AS CANTIDAD
			FROM 	DET_DOCUMENTO DD, 	DOCUMENTO D,	CATEGORIA_LOGICA CL
			WHERE 	DD.DOCUMENTO_ID  = D.DOCUMENTO_ID
					AND D.STATUS = 'D20'
					AND DD.CLIENTE_ID = CL.CLIENTE_ID
					AND CL.CLIENTE_ID = DD.CLIENTE_ID
					AND DD.CAT_LOG_ID = CL.CAT_LOG_ID
					AND CL.CATEG_STOCK_ID = 'TRAN_EGR'
					AND ((@P_CLIENTE_ID IS NULL) 		OR (DD.CLIENTE_ID=@P_CLIENTE_ID))
					AND ((@P_PRODUCTO_ID IS NULL) 		OR (DD.PRODUCTO_ID=@P_PRODUCTO_ID))
					AND ((@P_CAT_LOG_ID IS NULL)		OR (DD.CAT_LOG_ID_FINAL=@P_CAT_LOG_ID))
					AND ((@P_EST_MERC_ID IS NULL) 		OR (DD.EST_MERC_ID=@P_EST_MERC_ID))
					AND ((@P_NRO_LOTE IS NULL) 			OR (DD.NRO_LOTE=@P_NRO_LOTE))
					AND ((@P_NRO_PARTIDA IS NULL) 		OR (DD.NRO_PARTIDA=@P_NRO_PARTIDA))			
					AND ((@P_NRO_SERIE IS NULL) 		OR (DD.NRO_SERIE=@P_NRO_SERIE))
					AND ((@P_NRO_DESPACHO IS NULL) 		OR (DD.NRO_DESPACHO=@P_NRO_DESPACHO))
					AND ((@P_NRO_BULTO IS NULL) 		OR (DD.NRO_BULTO=@P_NRO_BULTO))
					AND ((@P_PROP1 IS NULL) 			OR (DD.PROP1=@P_PROP1))
					AND	((@P_PROP2 IS NULL) 			OR (DD.PROP2=@P_PROP2))
					AND ((@P_PROP3 IS NULL) 			OR (DD.PROP3=@P_PROP3))
					AND ((@PESO IS NULL) 				OR (DD.PESO=@PESO))
					AND ((@VOLUMEN IS NULL)				OR (DD.VOLUMEN=@VOLUMEN))
					AND ((@UNIDAD_ID IS NULL)			OR (DD.UNIDAD_ID=@UNIDAD_ID))
					AND ((@UNIDAD_PESO IS NULL)			OR (DD.UNIDAD_PESO=@UNIDAD_PESO))					
			GROUP BY 
				DD.CLIENTE_ID, DD.PRODUCTO_ID, CL.CATEG_STOCK_ID
			UNION ALL
			SELECT 	SUM(ISNULL(DD.CANTIDAD, 0)) AS CANTIDAD
			FROM  	DET_DOCUMENTO_TRANSACCION DDT,
					DET_DOCUMENTO DD,
					DOCUMENTO_TRANSACCION DT,
					CATEGORIA_LOGICA CL
			WHERE 	DDT.CLIENTE_ID = CL.CLIENTE_ID
					AND DDT.CAT_LOG_ID = CL.CAT_LOG_ID
					AND CL.CLIENTE_ID = DD.CLIENTE_ID
					AND CL.CATEG_STOCK_ID = 'TRAN_EGR'
					AND DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID
					AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA
					AND DDT.DOC_TRANS_ID = DT.DOC_TRANS_ID
					AND DT.STATUS = 'T10'
					AND NOT EXISTS (	SELECT 	RL_ID 
										FROM 	RL_DET_DOC_TRANS_POSICION RL
										WHERE 	RL.DOC_TRANS_ID_EGR = DDT.DOC_TRANS_ID
												AND RL.NRO_LINEA_TRANS_EGR = DDT.NRO_LINEA_TRANS)
					AND ((@P_CLIENTE_ID IS NULL) 		OR (DD.CLIENTE_ID=@P_CLIENTE_ID))
					AND ((@P_PRODUCTO_ID IS NULL) 		OR (DD.PRODUCTO_ID=@P_PRODUCTO_ID))
					AND ((@P_CAT_LOG_ID IS NULL)		OR (DD.CAT_LOG_ID_FINAL=@P_CAT_LOG_ID))
					AND ((@P_EST_MERC_ID IS NULL) 		OR (DD.EST_MERC_ID=@P_EST_MERC_ID))
					AND ((@P_NRO_LOTE IS NULL) 			OR (DD.NRO_LOTE=@P_NRO_LOTE))
					AND ((@P_NRO_PARTIDA IS NULL) 		OR (DD.NRO_PARTIDA=@P_NRO_PARTIDA))			
					AND ((@P_NRO_SERIE IS NULL) 		OR (DD.NRO_SERIE=@P_NRO_SERIE))
					AND ((@P_NRO_DESPACHO IS NULL) 		OR (DD.NRO_DESPACHO=@P_NRO_DESPACHO))
					AND ((@P_NRO_BULTO IS NULL) 		OR (DD.NRO_BULTO=@P_NRO_BULTO))
					AND ((@P_PROP1 IS NULL) 			OR (DD.PROP1=@P_PROP1))
					AND	((@P_PROP2 IS NULL) 			OR (DD.PROP2=@P_PROP2))
					AND ((@P_PROP3 IS NULL) 			OR (DD.PROP3=@P_PROP3))
					AND ((@PESO IS NULL) 				OR (DD.PESO=@PESO))
					AND ((@VOLUMEN IS NULL)				OR (DD.VOLUMEN=@VOLUMEN))
					AND ((@UNIDAD_ID IS NULL)			OR (DD.UNIDAD_ID=@UNIDAD_ID))
					AND ((@UNIDAD_PESO IS NULL)			OR (DD.UNIDAD_PESO=@UNIDAD_PESO))						
					
			UNION ALL
			SELECT 	SUM(ISNULL(DD.CANTIDAD, 0)) AS CANTIDAD
			FROM  	DET_DOCUMENTO_TRANSACCION DDT,
					DET_DOCUMENTO DD,
					RL_DET_DOC_TRANS_POSICION RL,
					DOCUMENTO D,
					CATEGORIA_LOGICA CL
			WHERE 	DD.DOCUMENTO_ID = D.DOCUMENTO_ID
					AND RL.CAT_LOG_ID = CL.CAT_LOG_ID
					AND D.STATUS = 'D30'
					AND RL.CLIENTE_ID = CL.CLIENTE_ID
					AND CL.CLIENTE_ID = DD.CLIENTE_ID
					AND CL.CATEG_STOCK_ID = 'TRAN_EGR'
					AND DDT.DOCUMENTO_ID = DD.DOCUMENTO_ID
					AND DDT.NRO_LINEA_DOC = DD.NRO_LINEA
					AND RL.DOC_TRANS_ID_EGR = DDT.DOC_TRANS_ID
					AND RL.NRO_LINEA_TRANS_EGR = DDT.NRO_LINEA_TRANS
					AND ((@P_CLIENTE_ID IS NULL) 		OR (DD.CLIENTE_ID=@P_CLIENTE_ID))
					AND ((@P_PRODUCTO_ID IS NULL) 		OR (DD.PRODUCTO_ID=@P_PRODUCTO_ID))
					AND ((@P_CAT_LOG_ID IS NULL)		OR (DD.CAT_LOG_ID_FINAL=@P_CAT_LOG_ID))
					AND ((@P_EST_MERC_ID IS NULL) 		OR (DD.EST_MERC_ID=@P_EST_MERC_ID))
					AND ((@P_NRO_LOTE IS NULL) 			OR (DD.NRO_LOTE=@P_NRO_LOTE))
					AND ((@P_NRO_PARTIDA IS NULL) 		OR (DD.NRO_PARTIDA=@P_NRO_PARTIDA))			
					AND ((@P_NRO_SERIE IS NULL) 		OR (DD.NRO_SERIE=@P_NRO_SERIE))
					AND ((@P_NRO_DESPACHO IS NULL) 		OR (DD.NRO_DESPACHO=@P_NRO_DESPACHO))
					AND ((@P_NRO_BULTO IS NULL) 		OR (DD.NRO_BULTO=@P_NRO_BULTO))
					AND ((@P_PROP1 IS NULL) 			OR (DD.PROP1=@P_PROP1))
					AND	((@P_PROP2 IS NULL) 			OR (DD.PROP2=@P_PROP2))
					AND ((@P_PROP3 IS NULL) 			OR (DD.PROP3=@P_PROP3))
					AND ((@PESO IS NULL) 				OR (DD.PESO=@PESO))
					AND ((@VOLUMEN IS NULL)				OR (DD.VOLUMEN=@VOLUMEN))
					AND ((@UNIDAD_ID IS NULL)			OR (DD.UNIDAD_ID=@UNIDAD_ID))
					AND ((@UNIDAD_PESO IS NULL)			OR (DD.UNIDAD_PESO=@UNIDAD_PESO))						
					
					AND NOT EXISTS (	SELECT 	RL_ID 
										FROM 	RL_DET_DOC_TRANS_POSICION RL
										WHERE 	RL.DOC_TRANS_ID_EGR = DDT.DOC_TRANS_ID
												AND RL.NRO_LINEA_TRANS_EGR = DDT.NRO_LINEA_TRANS)
			GROUP BY DD.CLIENTE_ID, DD.PRODUCTO_ID, CL.CATEG_STOCK_ID)X

	SET @TOTAL_A_DESCONTAR= @SUMA_RL - @TEGR
	--COMPARO EL VALOR Q QUIERO SACAR CONTRA EL QUE PUEDO AJUSTAR SEGUN RL.
	IF (@PVALOR > @TOTAL_A_DESCONTAR) AND (@PSIGNO='-')
	BEGIN
		RAISERROR('No es posible descontar el valor solicitado. ', 16,1)
		RETURN		
	END
	-----------------------------------------------------------------------------------------------------------	
	--Obtengo todas las rl que pueden ser afectadas
	-----------------------------------------------------------------------------------------------------------	
	SET @P_RL= CURSOR FOR
		SELECT	RL.RL_ID
		FROM	RL_DET_DOC_TRANS_POSICION RL 
				LEFT OUTER JOIN POSICION P			ON(RL.POSICION_ACTUAL=P.POSICION_ID)	
				LEFT OUTER JOIN NAVE N				ON(RL.NAVE_ACTUAL=N.NAVE_ID)			
				LEFT OUTER JOIN NAVE N2				ON(P.NAVE_ID=N2.NAVE_ID),
				DET_DOCUMENTO DT, DET_DOCUMENTO_TRANSACCION DDT, CATEGORIA_LOGICA CL
		WHERE 	RL.DOC_TRANS_ID 					=DDT.DOC_TRANS_ID
				AND RL.NRO_LINEA_TRANS 				=DDT.NRO_LINEA_TRANS
				AND DDT.DOCUMENTO_ID 				=DT.DOCUMENTO_ID
				AND DDT.NRO_LINEA_DOC 				=DT.NRO_LINEA
				AND RL.DISPONIBLE					='1'
				AND CL.CLIENTE_ID					=RL.CLIENTE_ID
				AND CL.CAT_LOG_ID					=RL.CAT_LOG_ID
				AND ((@P_CAT_LOG_ID IS NULL) 		OR (RL.CAT_LOG_ID=@P_CAT_LOG_ID))
				AND ((@P_NRO_LOTE IS NULL) 			OR (DT.NRO_LOTE=@P_NRO_LOTE))
				AND ((@P_NRO_SERIE IS NULL) 		OR (DT.NRO_SERIE=@P_NRO_SERIE))
				AND ((@P_NRO_PARTIDA IS NULL) 		OR (DT.NRO_PARTIDA=@P_NRO_PARTIDA))
				AND ((@P_NRO_DESPACHO IS NULL) 		OR (DT.NRO_DESPACHO=@P_NRO_DESPACHO))
				AND ((@P_NRO_BULTO IS NULL) 		OR (DT.NRO_BULTO=@P_NRO_BULTO))
				-----------------------------------------------------------------------------------------------------------
				-------------------------------       SOLUCIONADO	------------------------------------------------------
				-----------------------------------------------------------------------------------------------------------
				AND ((@P_POSICION IS NULL) 			OR (RL.POSICION_ACTUAL=@P_POSICION))
				AND ((@P_NAVE IS NULL)				OR (RL.NAVE_ACTUAL=@P_NAVE))
				-----------------------------------------------------------------------------------------------------------
				AND ((@P_CLIENTE_ID IS NULL) 		OR (DT.CLIENTE_ID=@P_CLIENTE_ID))
				AND ((@P_PRODUCTO_ID IS NULL) 		OR (DT.PRODUCTO_ID=@P_PRODUCTO_ID))
				AND ((@P_EST_MERC_ID IS NULL) 		OR (RL.EST_MERC_ID=@P_EST_MERC_ID))
				AND ((@P_PROP1 IS NULL) 			OR (DT.PROP1=@P_PROP1))
				AND	 ((@P_PROP2 IS NULL) 			OR (DT.PROP2=@P_PROP2))
				AND ((@P_PROP3 IS NULL) 			OR (DT.PROP3=@P_PROP3))
				AND ((@PESO IS NULL) 				OR (DT.PESO=@PESO))
				AND ((@VOLUMEN IS NULL)				OR (DT.VOLUMEN=@VOLUMEN))
				AND ((@UNIDAD_ID IS NULL)			OR (DT.UNIDAD_ID=@UNIDAD_ID))
				AND ((@UNIDAD_PESO IS NULL)			OR (DT.UNIDAD_PESO=@UNIDAD_PESO))
				AND ((@UNIDAD_VOLUMEN IS NULL)		OR (DT.UNIDAD_VOLUMEN=@UNIDAD_VOLUMEN))
				AND ((@MONEDA_ID IS NULL)			OR (DT.MONEDA_ID=@MONEDA_ID))
				AND ((@COSTO IS NULL)				OR (DT.COSTO=@COSTO))
				AND ((RL.POSICION_ACTUAL IS NOT NULL AND P.POS_LOCKEADA='0') OR (RL.NAVE_ACTUAL IS NOT NULL)) 
				AND ((RL.POSICION_ACTUAL IS NOT NULL ) OR (RL.NAVE_ACTUAL IS NOT NULL))
				AND ((RL.NAVE_ACTUAL IS NOT NULL) 	OR (RL.POSICION_ACTUAL IS NOT NULL))
				AND  NOT   EXISTS (	SELECT 	POSICION_ID
									FROM  	RL_POSICION_PROHIBIDA_CLIENTE RLPPC
									WHERE 	RLPPC.POSICION_ID = RL.POSICION_ACTUAL
											AND    RLPPC.CLIENTE_ID  = DT.CLIENTE_ID)
	
	-----------------------------------------------------------------------------------------------------------	
	OPEN @P_RL
	SET @RESTANTE=@PVALOR
	UPDATE HISTORICO_POS_OCUPADAS2 SET FECHA = GETDATE()
	FETCH NEXT FROM @P_RL INTO @RL_ID
	WHILE (@@FETCH_STATUS=0) OR (@TERMINO='1')
	BEGIN
		SELECT @CANT_TOTAL_UBIC= CANTIDAD FROM RL_DET_DOC_TRANS_POSICION WHERE RL_ID=@RL_ID
		IF @PSIGNO='+'
		BEGIN
			UPDATE 	RL_DET_DOC_TRANS_POSICION 			
				SET CANTIDAD=CANTIDAD + @PVALOR
			WHERE	RL_ID=@RL_ID
			EXEC AUDITORIA_HIST_AJUSTE @RL_ID, @PVALOR
			SET	@TERMINO='1'
			BREAK
		END		
		IF @PSIGNO='-'
		BEGIN
			IF @CANT_TOTAL_UBIC >= @RESTANTE
			BEGIN
				SET @TOTAL_A_DESCONTAR=@RESTANTE
				SET @RESTANTE=0
			END
			ELSE
			BEGIN
				SET @TOTAL_A_DESCONTAR=@CANT_TOTAL_UBIC
				SET @RESTANTE=@RESTANTE-@CANT_TOTAL_UBIC
			END
			
			UPDATE RL_DET_DOC_TRANS_POSICION 
					SET CANTIDAD=@CANT_TOTAL_UBIC - @TOTAL_A_DESCONTAR
			WHERE	RL_ID=@RL_ID
			
			SET @VVALOR= -1 * @TOTAL_A_DESCONTAR

			EXEC AUDITORIA_HIST_AJUSTE @RL_ID,@VVALOR
			
			IF @RESTANTE=0
			BEGIN
				SET @TERMINO='1'
				BREAK
			END
		END
		FETCH NEXT FROM @P_RL INTO @RL_ID
	END --FIN WHILE
	
	--VERIFICO QUE SE HAYA PODIDO HACER EL AJUSTE
	IF @TERMINO <> '1' 
		BEGIN
			SET @V_AUX = 'No se pudo completar el ajuste, faltan ' + CAST(@RESTANTE AS VARCHAR) + ' de su correspondiente unidad.'
			RAISERROR(@V_AUX,15,1)
		END
	--FIN VERIFICACION

	DELETE RL_DET_DOC_TRANS_POSICION WHERE CANTIDAD = 0
	CLOSE @P_RL
	DEALLOCATE @P_RL

END --FIN PROCEDURE.

GO